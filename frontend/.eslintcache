[{"/Users/karthik/Desktop/linkedin-clone/frontend/src/index.js":"1","/Users/karthik/Desktop/linkedin-clone/frontend/src/App.js":"2","/Users/karthik/Desktop/linkedin-clone/frontend/src/reportWebVitals.js":"3","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/login.component.js":"4","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/register.component.js":"5","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/navbar.component.js":"6","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/dashboard.component.js":"7","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/jobadd.component.js":"8","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/jobview.component.js":"9","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/apply.component.js":"10","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/applicationview.component.js":"11","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/updatejob.component.js":"12","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/appviewjob.component.js":"13","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/updaterecruiter.component.js":"14","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/updateapplicant.component.js":"15","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/viewaccepted.component.js":"16","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/intro.component.js":"17","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/recruiter-registration.component.js":"18","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/applicant-registration.component.js":"19","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/auth.js":"20"},{"size":500,"mtime":1610957263409,"results":"21","hashOfConfig":"22"},{"size":2479,"mtime":1611596590997,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1610115406180,"results":"24","hashOfConfig":"22"},{"size":2572,"mtime":1611326097099,"results":"25","hashOfConfig":"22"},{"size":1325,"mtime":1610473064139,"results":"26","hashOfConfig":"22"},{"size":3142,"mtime":1611323619801,"results":"27","hashOfConfig":"22"},{"size":7230,"mtime":1611596709224,"results":"28","hashOfConfig":"22"},{"size":10128,"mtime":1611595903529,"results":"29","hashOfConfig":"22"},{"size":23629,"mtime":1611415234787,"results":"30","hashOfConfig":"22"},{"size":3359,"mtime":1610722973463,"results":"31","hashOfConfig":"22"},{"size":8427,"mtime":1611390732073,"results":"32","hashOfConfig":"22"},{"size":4312,"mtime":1611644497285,"results":"33","hashOfConfig":"22"},{"size":17055,"mtime":1611414633255,"results":"34","hashOfConfig":"22"},{"size":5328,"mtime":1611506587787,"results":"35","hashOfConfig":"22"},{"size":11560,"mtime":1611504528919,"results":"36","hashOfConfig":"22"},{"size":15018,"mtime":1611596025009,"results":"37","hashOfConfig":"22"},{"size":564,"mtime":1611596544594,"results":"38","hashOfConfig":"22"},{"size":4610,"mtime":1611583291982,"results":"39","hashOfConfig":"22"},{"size":12258,"mtime":1611583282865,"results":"40","hashOfConfig":"22"},{"size":284,"mtime":1611308384328,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"j16u3i",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"44"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/karthik/Desktop/linkedin-clone/frontend/src/index.js",[],["101","102"],"/Users/karthik/Desktop/linkedin-clone/frontend/src/App.js",["103"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport Navbar from \"./components/navbar.component\";\nimport Intro from \"./components/intro.component\"\nimport Register from \"./components/register.component\";\nimport Login from \"./components/login.component\";\nimport Dashboard from \"./components/dashboard.component\";\nimport JobView from \"./components/jobview.component\";\nimport JobAdd from \"./components/jobadd.component\";\nimport Apply from \"./components/apply.component\";\nimport viewApplication from \"./components/applicationview.component\";\nimport appViewJob from \"./components/appviewjob.component\";\nimport updateJob from \"./components/updatejob.component\";\nimport updateApplicant from \"./components/updateapplicant.component\";\nimport updateRecruiter from \"./components/updaterecruiter.component\";\nimport viewAccepted from \"./components/viewaccepted.component\";\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.handler1 = this.handler1.bind(this);\n    this.handler2 = this.handler2.bind(this);\n    this.state = {\n      logged_in: (localStorage.getItem('token') ? true : false)\n    }\n  }\n \n  handler1() {\n    this.setState({logged_in: false})\n  }\n\n  handler2() {\n    console.log(\"HANDLER INVOKED\");\n    this.setState({logged_in: true})\n  }\n\n  render() {\n  return (\n    <Router>\n    <div className=\"container\">\n      <Navbar isLoggedIn={this.state.logged_in}/>\n      <br />\n      <Route path=\"/\" exact render={(props) => <Intro {...props} handler={this.handler1} /> } />\n      <Route path=\"/register\" component={Register} />\n      <Route path=\"/login\" render={(props) => <Login {...props} handler={this.handler2} /> } />\n      <Route path=\"/dashboard\" component={Dashboard} />\n      <Route path=\"/jobs\" component={JobView} />\n      <Route path=\"/jobadd\" component={JobAdd} />\n      <Route path=\"/jobview\" component={JobView} />\n      <Route path=\"/apply\" component={Apply} />\n      <Route path=\"/viewapp\" component={viewApplication} />\n      <Route path=\"/appviewjob\" component={appViewJob} />\n      <Route path=\"/updatejob\" component={updateJob} />\n      <Route path=\"/updateapplicant\" component={updateApplicant} />\n      <Route path=\"/updaterecruiter\" component={updateRecruiter} />\n      <Route path=\"/viewaccepted\" component={viewAccepted} />\n    </div>\n    </Router>\n  )};\n}\n\nexport default App;\n\n","/Users/karthik/Desktop/linkedin-clone/frontend/src/reportWebVitals.js",[],"/Users/karthik/Desktop/linkedin-clone/frontend/src/components/login.component.js",["104","105","106"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from \"react-router-dom\";\nimport Auth from './auth';\n\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    componentWillMount() {\n        console.log(this.props);\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const loginCred = {\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        axios.post(\"http://localhost:5000/users/login\", loginCred).then(result => { \n            const tokens = {\n                token: result.data.token\n             }; \n             console.log(result.data);\n            if(result.data.token){\n                localStorage.setItem(\"token\" , result.data.token);\n                localStorage.setItem(\"type\" , result.data.user.type);\n                this.props.handler();\n                this.props.history.push('/dashboard');\n            \n            }\n            else{\n                alert(\"Wrong Credentials\");\n                this.props.history.push('/');\n            }\n        })\n        .catch(error => console.log(error));\n        console.log(loginCred);\n    }\n\n    render(){\n        return (\n            <div>\n            <form onSubmit={this.onSubmit}>\n\n                <div className=\"form-group\">\n                    <label>Email:</label>\n                    <input type=\"email\" className=\"form-control\" value={this.state.email} onChange={this.onChangeEmail} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password:</label>\n                    <input type=\"password\" className=\"form-control\" value={this.state.password} onChange={this.onChangePassword} />\n                </div>\n                \n                <div className=\"form-group\">\n                    <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\n                </div>\n            </form>\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter(Login);","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/register.component.js",["107","108"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nimport ApplicantRegister from \"./applicant-registration.component\";\nimport RecruiterRegister from \"./recruiter-registration.component\";\n\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props);\n        this.onSelect = this.onSelect.bind(this);\n\n        this.state = {\n            option: ''\n        }\n    }\n\n    onSelect(e) {\n        console.log(e);\n        this.setState({\n            option: e\n        });\n    }\n\n\n    render(){\n        return (\n            <div>\n            <DropdownButton alignRight title=\"Register as\" id=\"dropdown-menu-align-right\" value={this.state.option} onSelect={this.onSelect} >\n              <Dropdown.Item eventKey=\"Applicant\">Applicant Registration</Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item eventKey=\"Recruiter\">Recruiter Registration</Dropdown.Item>\n            </DropdownButton>\n\n            {this.state.option === \"\" ? '' : (this.state.option === \"Applicant\" ? <ApplicantRegister/> : <RecruiterRegister/>)}\n            </div>\n        )\n    }\n\n}","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/navbar.component.js",["109","110"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"bootstrap/js/src/collapse.js\";\n\nexport default class Navbar extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    \n    renderifLoginApp() {\n        return (\n        <ul className=\"navbar-nav mr-auto\">\n            <li className=\"navbar-item\">\n                <Link to=\"/dashboard\" className=\"nav-link\">Dashboard</Link>\n            </li>\n            <li className=\"navbar-item\">\n                <Link to=\"/jobview\" className=\"nav-link\">View And Apply to jobs</Link>\n            </li>\n            <li className=\"navbar-item\">\n                <Link to=\"/viewapp\" className=\"nav-link\">View Applications</Link>\n            </li>\n            <li className=\"navbar-item\">\n                    <Link to=\"/\" className=\"nav-link\">Logout</Link>\n            </li>\n        </ul> \n        )\n    }\n\n    renderifLoginRec() {\n        return(\n        <ul className=\"navbar-nav mr-auto\">\n            <li className=\"navbar-item\">\n                <Link to=\"/dashboard\" className=\"nav-link\">Dashboard</Link>\n            </li>\n            <li className=\"navbar-item\">\n                <Link to=\"/jobadd\" className=\"nav-link\">Add a Job</Link>\n            </li>\n            <li className=\"navbar-item\">\n                <Link to=\"/jobview\" className=\"nav-link\">View Job And applications</Link>\n            </li>\n            <li className=\"navbar-item\">\n                <Link to=\"/viewaccepted\" className=\"nav-link\">View accepted applications</Link>\n            </li>\n            <li className=\"navbar-item\">\n                    <Link to=\"/\" className=\"nav-link\">Logout</Link>\n            </li>\n        </ul> \n        )\n    }\n\n    renderifNotLoggedIn() {\n        return (\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                    <Link to=\"/\" className=\"nav-link\">Introduction</Link>\n                </li>\n                <li className=\"navbar-item\">\n                    <Link to=\"/register\" className=\"nav-link\">Register</Link>\n                </li>\n                <li className=\"navbar-item\">\n                    <Link to=\"/login\" className=\"nav-link\">Login</Link>\n                </li>\n             </ul> \n        )\n    }\n\n    render() {\n        const isLoggedin = this.props.isLoggedIn;\n        console.log(isLoggedin);\n        return (\n            <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <Link to=\"/\" className=\"navbar-brand\"> Job Match </Link>\n                <div className=\"collapse navbar-collapse\">\n                  {isLoggedin ? ((localStorage.getItem('type') == 'Applicant') ? this.renderifLoginApp() : this.renderifLoginRec()) : this.renderifNotLoggedIn()}\n                </div>\n            </nav>\n        );\n    }\n}\n\n","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/dashboard.component.js",["111","112","113","114","115","116"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from \"react-router-dom\";\nimport StarRatings from 'react-star-ratings';\nimport Button from 'react-bootstrap/Button'\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n\n\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.componentWillMount = this.componentWillMount.bind(this);\n        this.renderUser = this.renderUser.bind(this);\n        this.state = {\n            type: '',\n            user: {},\n            loading: true,\n        };\n    }\n\n    componentWillMount() {\n        const User = {\n          token: localStorage.getItem(\"token\"),\n          type:localStorage.getItem(\"type\")\n        };\n\n        const TokenVerify = {\n            token: localStorage.getItem(\"token\")\n        }\n        \n        if(!User.token)\n        {\n            alert('Not permitted');\n            this.props.history.push('/');\n        }\n\n        if(User.type === 'Applicant') {\n            this.setState({type: 'Applicant'});\n            axios\n                .post(\"http://localhost:5000/users/decode\" , TokenVerify)\n                .then(result => {\n                    this.setState({id: result.data.id});\n                    if(!result.data.id)\n                    {\n                        alert('Not permitted');\n                        this.props.history.push('/');\n                    }\n                    const url = \"http://localhost:5000/applicants/\" + result.data.id;\n                    console.log(url);\n                    axios\n                        .post(url , TokenVerify)\n                        .then(userdetails => {\n                            this.setState({user: userdetails.data});\n                            console.log(this.state.user.users.name);\n                            this.setState({loading: false})\n                        })\n                        .catch(function(error) {\n                            console.log(error);\n                    });\n            \n                })\n                .catch(function(error) {\n                    console.log(error);\n                });\n        }\n\n        else {\n            this.setState({type: 'Recruiter'});\n            axios\n            .post(\"http://localhost:5000/users/decode\" , TokenVerify)\n            .then(result => {\n                this.setState({id: result.data.id});\n                if(!result.data.id)\n                {\n                    alert('Not permitted');\n                    this.props.history.push('/');\n                }\n                const url = \"http://localhost:5000/recruiters/\" + result.data.id;\n                console.log(url);\n                axios\n                    .post(url , TokenVerify)\n                    .then(userdetails => {\n                        this.setState({user: userdetails.data});\n                        console.log(userdetails.data); \n                        this.setState({loading: false});\n                    })\n                    .catch(function(error) {\n                        console.log(error);\n                });\n        \n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n\n        }\n         \n      }\n\n      onUpdate(d) {\n          if(this.state.type === 'Applicant')\n            this.props.history.push({pathname: \"/updateapplicant\" });\n          else if(this.state.type === 'Recruiter')\n            this.props.history.push({pathname: \"/updaterecruiter\" });\n      }\n\n      renderProfile(d) {\n          if(!d.hasOwnProperty('profile'))\n          {\n              return ''\n          }\n          else{\n              if(!d.profile)\n              {\n                  return ''\n              }\n              else{\n                  return <img src={`data:image/jpeg;base64,${d.profile}`} />\n              }\n          }\n      }\n\n      renderUser() { \n        if(this.state.loading)\n        {\n            return(\n                <div>Loading.....</div>\n            )\n        }\n        else if(this.state.type === 'Applicant')\n        {\n            const skillitems = this.state.user.applicant.skills.map((d) => <li key={d}>{d}</li>);\n            const langitems = this.state.user.applicant.languages.map((d) => <li key={d}>{d}</li>);\n            const edu = this.state.user.applicant.education.map((d) => \n                <tr key={d}>\n                    <td>{d.college}</td>\n                    <td>{d.start_year}</td>\n                    <td>{d.end_year}</td>\n                </tr>\n\n            );\n            return (\n            <div className=\"container\">\n            <h1>Hey! You are an applicant!</h1>\n                <div className=\"flex-row\">\n                    <div>\n                        <table className=\"table table-bordered\">\n                            <tbody>\n                            <tr className=\"table-danger\">Name: {this.state.user.users.name}</tr>\n                            <tr className=\"table-danger\">Email: {this.state.user.users.email}</tr>\n                            <tr className=\"table-danger\">Rating: {this.state.user.users.rating}</tr>\n                            <tr className=\"table-danger\">Skills: {skillitems}</tr>\n                            <tr className=\"table-danger\">Languages: {langitems}</tr>\n                            <tr className=\"table-danger\">Education: <table className=\"table table-bordered\">{edu}</table> </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <div>\n                        {this.renderProfile(this.state.user.users)}\n                    </div>\n                </div>\n            <Button size=\"sm\" variant=\"outline-primary\" onClick={() => this.onUpdate()}>Update</Button>\n            </div>\n            );\n        }\n        else if(this.state.type === 'Recruiter')\n        {\n            return (\n            <div className=\"container\">\n            <h1>Hey! You are a recruiter</h1>\n            <div className=\"flex-row\">\n                <div>\n                    <table className=\"table table-bordered\">\n                        <tbody>\n                            <tr className=\"table-danger\">Name: {this.state.user.users.name}</tr>\n                            <tr className=\"table-danger\">Email: {this.state.user.users.email}</tr>\n                            <tr className=\"table-danger\">Phone: {this.state.user.recruiter.phone}</tr>\n                            <tr className=\"table-danger\">Bio: {this.state.user.recruiter.bio}</tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div>\n                        {this.renderProfile(this.state.user.users)}\n                </div>\n            </div>\n\n            <Button size=\"sm\" variant=\"outline-primary\" onClick={() => this.onUpdate()}>Update</Button>\n            </div>\n            );\n        }\n      }\n    \n    render(){\n        return (\n            <div>\n            {this.renderUser()}\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter(Dashboard);","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/jobadd.component.js",["117","118","119","120","121"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from \"react-router-dom\";\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.componentWillMount = this.componentWillMount.bind(this);\n        this.onChangeDeadline = this.onChangeDeadline.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeType = this.onChangeType.bind(this);\n        this.onChangeDuration = this.onChangeDuration.bind(this);\n        this.onChangePostingDate = this.onChangePostingDate.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeSalary = this.onChangeSalary.bind(this);\n        this.onChangeMaxApplicants = this.onChangeMaxApplicants.bind(this);\n        this.onChangeMaxPositions = this.onChangeMaxPositions.bind(this);\n        this.state = {\n            title: '',\n            max_applicants: '',\n            max_positions: '',\n            recruiter: '',\n            skills: [],\n            type: '',\n            posting_date: '',\n            deadline: '',\n            duration: 0,\n            salary: ''\n        }\n    }\n\n    componentWillMount() {\n\n        const User = {\n            token: localStorage.getItem('token'),\n            type: localStorage.getItem('type')\n        }\n\n        const newToken = {\n            token: localStorage.getItem('token')\n        }\n\n        if(User.type !== 'Recruiter')\n        {\n            alert('Not Recruiter!');\n            this.props.history.push('/');\n        }\n        else {\n            axios.post(\"http://localhost:5000/users/decode\" , newToken)\n            .then(res => {\n                this.setState({recruiter: res.data.id});\n                if(!res.data.id)\n                {\n                    alert(\"Session time out / Not permitted\");\n                    this.props.history.push('/');\n                }\n            })\n        }\n    }\n\n    skilladdClick(){\n        this.setState(prevState => ({ \n            skills: [...prevState.skills, '']\n        }))\n    }\n\n    skillhandleChange(i, e) {\n        const { name , value } = e.target;\n        let skills = [...this.state.skills];\n        skills[i] = {...skills[i],  [name]: value}; \n        console.log(skills);\n        this.setState({ skills });\n    }\n\n    skillremoveClick(i){\n        let skills = [...this.state.skills];\n        skills.splice(i, 1);\n        this.setState({ skills });\n    }\n\n    skillcreateUI(){\n        return this.state.skills.map((el, i) => (\n          <div key={i} className=\"d-flex\">\n             <input placeholder=\"Skill\" name=\"skill\" className=\"form-control\" value={el.skill ||''} onChange={this.skillhandleChange.bind(this, i)} />\n             <input type='button' className=\"btn btn-secondary\" value='remove' onClick={this.skillremoveClick.bind(this, i)}/>\n          </div>          \n        ))\n    }\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        })\n    }\n\n    onChangeMaxApplicants(e) {\n        this.setState({\n            max_applicants: e.target.value\n        })\n    }\n\n    onChangeMaxPositions(e) {\n        this.setState({\n            max_positions: e.target.value\n        })\n    }\n\n    onChangeType(e) {\n        this.setState({\n            type: e\n        })\n    }\n\n    onChangeDeadline(e) {\n        this.setState({\n            deadline: e.target.value\n        })\n    }\n\n    \n    onChangeSalary(e) {\n        this.setState({\n            salary: e.target.value\n        })\n    }\n\n    onChangeDuration(e) {\n        this.setState({\n            duration: e\n        });\n    }\n\n    onChangePostingDate(e) {\n        this.setState({\n            posting_date: e.target.value\n        })\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        console.log(this.state);\n        const deadlineDate = new Date(this.state.deadline);\n        const postingDate = new Date(this.state.posting_date);\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        const skill_len = this.state.skills.length;\n        const cur_date = new Date();\n        const cur_stamp = cur_date.getTime();\n        const deadline_stamp = Date.parse(deadlineDate);\n        const posting_stamp = Date.parse(postingDate);\n        console.log(deadline_stamp , cur_stamp)\n        if(deadline_stamp <= cur_stamp || deadline_stamp >= posting_stamp || posting_stamp <= cur_stamp)\n        {\n            alert(\"Enter the dates properly\");\n            window.location.reload(false);\n        }\n        var skill = [];\n        if(skill_len != 0)\n        {\n            for(var i = 0 ; i < skill_len ; i++)\n            {\n                skill.push(this.state.skills[i].skill);\n            }\n        }\n\n        if(isNaN(Number(this.state.max_applicants)) || isNaN(Number(this.state.max_positions)))\n        {\n            alert('Enter numbers for Max Applicants/Max Positions');\n            window.location.reload(false);\n        }\n        const newJob = {\n            token: localStorage.getItem('token'),\n            deadline: deadlineDate,\n            posting_date: {date: postingDate.getDate() , month: postingDate.getMonth() , year: postingDate.getFullYear()},\n            salary: this.state.salary,\n            recruiter: this.state.recruiter,\n            title: this.state.title,\n            skills: skill,\n            duration: this.state.duration,\n            max_applicants: this.state.max_applicants,\n            max_positions: this.state.max_positions,\n            type: this.state.type\n        }\n        \n        axios.post(\"http://localhost:5000/jobs/add\" , newJob) \n        .then(result => {\n            if(result.data == 1) { alert('Successful'); this.props.history.push('/dashboard'); }\n            else {alert(result.data);}\n        })\n    }\n\n\n    render(){\n        return (\n            <form onSubmit={this.onSubmit}>\n                <h2> Add Job: </h2>\n                <div className=\"form-group\">\n                    <label>Enter the title for the job: </label>\n                    <input type=\"text\" value={this.state.title} onChange={this.onChangeTitle} className='form-control' placeholder=\"Title\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter the Deadline for application</label>\n                    <input type=\"datetime-local\" className='form-control' value={this.state.deadline} onChange={this.onChangeDeadline} timeFormat={true} inputProps={{ placeholder: \"Deadline\" }}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter the Maximum Number of Applicants</label>\n                    <input type=\"text\" value={this.state.max_applicants} onChange={this.onChangeMaxApplicants} className='form-control' placeholder=\"Max Applicants\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter the Maximum Number of Positions</label>\n                    <input type=\"text\" value={this.state.max_positions} onChange={this.onChangeMaxPositions} className='form-control' placeholder=\"Max Positions\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter the Salary per month</label>\n                    <input type=\"text\" value={this.state.salary} onChange={this.onChangeSalary} className='form-control' placeholder=\"Salary\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter they type of the job: {this.state.type}</label>\n                    <DropdownButton alignRight title=\"Type\" id=\"dropdown\" value={this.state.type} onSelect={this.onChangeType} >\n                        <Dropdown.Item eventKey=\"Intern\">Intern</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"Contract\">Contract</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"Full-time\">Full-time</Dropdown.Item>\n                    </DropdownButton>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter the duration for the job; if its full time or contract, enter 0: {this.state.duration}</label>\n                    <DropdownButton alignRight title=\"Type\" id=\"dropdown\" value={this.state.duration} onSelect={this.onChangeDuration} >\n                        <Dropdown.Item eventKey=\"0\">0 (Indefinite)</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"1\">1</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"2\">2</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"3\">3</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"4\">4</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"5\">5</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"6\">6</Dropdown.Item>\n                    </DropdownButton>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter Skills: </label>\n                    {this.skillcreateUI()}\n                    <input type='button' value='add' className=\"btn btn-secondary pull-right\" onClick={this.skilladdClick.bind(this)}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter Joining Date</label>\n                    <input type=\"date\" id=\"start\" name=\"trip-start\" value=\"2021-07-22\" min=\"2020-01-01\" max=\"2021-12-31\" className=\"form-control\" value={this.state.posting_date} onChange={this.onChangePostingDate} />\n                </div>\n\n                <div className=\"form-group\">\n                     <input type=\"submit\" value=\"Add Job\" className=\"btn btn-primary\" />\n                </div>\n            </form>\n        )\n    }\n\n}\n\nexport default withRouter(Login);","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/jobview.component.js",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from \"react-router-dom\";\nimport StarRatings from 'react-star-ratings';\nimport Button from 'react-bootstrap/Button'\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Fuse from 'fuse.js';\n\n\nclass JobView extends Component {\n    constructor(props) {\n        super(props);\n        this.componentWillMount = this.componentWillMount.bind(this);\n        this.renderJobs = this.renderJobs.bind(this);\n        this.getRecruiter = this.getRecruiter.bind(this);\n        this.onClickApp = this.onClickApp.bind(this);\n        this.onClickRec = this.onClickRec.bind(this);\n        this.onChangeFilterDuration = this.onChangeFilterDuration.bind(this);\n        this.onChangeFilterSalaryMax = this.onChangeFilterSalaryMax.bind(this);\n        this.onChangeFilterType = this.onChangeFilterType.bind(this);\n        this.onChangeFilterSalaryMin = this.onChangeFilterSalaryMin.bind(this);\n        this.onFilter = this.onFilter.bind(this);\n        this.onFuzzy = this.onFuzzy.bind(this);\n        this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n        this.onChangeSortBy = this.onChangeSortBy.bind(this);\n        this.onChangeSortIn = this.onChangeSortIn.bind(this);\n        this.state = {\n            jobs: [],\n            recruiters: [],\n            loading: true,\n            filter_salary_max: 1000000,\n            filter_salary_min: 0,\n            filter_type: '',\n            filter_duration: 7,\n            filtered_job: [],\n            no_results: 0,\n            applications: [],\n            id: '',\n            search_title: '',\n            occurences: [],\n            sortby: '',\n            sortin: 'asc'\n        };\n    }\n\n    componentWillMount() {\n        const User = {\n          token: localStorage.getItem(\"token\"),\n          type:localStorage.getItem(\"type\")\n        };\n\n        const TokenVerify = {\n            token: localStorage.getItem(\"token\")\n        }\n        \n        if(!User.token)\n        {\n            alert('Not permitted');\n            this.props.history.push('/');\n        }\n\n        if(User.type === 'Applicant') {\n        // List all jobs\n            axios.post(\"http://localhost:5000/jobs/viewall\" , TokenVerify)\n            .then(info => {\n               this.setState({jobs: info.data.jobs});\n               this.setState({recruiters: info.data.recruiters});\n               axios.post(\"http://localhost:5000/users/decode\" , TokenVerify)\n               .then(result => {\n                    this.setState({id: result.data.id});\n                    if(!result.data.id)\n                    {\n                        alert('Not permitted');\n                        this.props.history.push('/');\n                    }\n                    const url = \"http://localhost:5000/applicants/applications/\" + result.data.id\n                    axios.post(url , TokenVerify)\n                    .then(applications => {\n                        if(applications.data == 1)\n                        {\n                            alert('Not permitted');\n                            this.props.history.push('/login');\n                        }\n                        this.setState({applications: applications.data});\n                        var jobids = [];\n                        for(var i = 0 ; i < info.data.jobs.length ; i++)\n                        {\n                            jobids.push(info.data.jobs[i]._id);\n                        }\n\n                        const job = {\n                            id: jobids\n                        }\n\n                        axios.post(\"http://localhost:5000/jobs/applications/countall\" , job)\n                        .then(applications => {\n                            var job_occurences = [];\n                            for(var i = 0 ; i < applications.data.length ; i++)\n                            {\n                                job_occurences.push(applications.data[i].job);\n                            }\n                            this.setState({occurences: job_occurences});\n                        })\n                        this.setState({loading: false});\n                    })\n                    .catch((error) => console.log(error));\n               })\n               .catch((error) => console.log(error));\n\n            })\n            .catch((error) => console.log(error));\n         \n        }\n        if(User.type === 'Recruiter') {\n            axios.post(\"http://localhost:5000/users/decode\" , TokenVerify)\n            .then(res => {\n                if(!res.data.id) {\n                    alert('Not permitted');\n                    this.props.history.push('/');\n                }\n                else {\n                    const url = \"http://localhost:5000/recruiters/\" + res.data.id + \"/jobs\";\n                    axios.post(url , TokenVerify)\n                    .then(jobs => {\n                        this.setState({jobs: jobs.data});\n                        this.setState({loading: false});\n                    })\n                    .catch((error) => console.log(error));\n                }\n            })\n        }\n\n    }\n\n    async onFuzzy() {\n        var res = []\n        if(this.state.filtered_job.length == 0)\n        {\n            const fuse = new Fuse(this.state.jobs, {\n                keys: ['title']\n            });\n\n            res = fuse.search(this.state.search_title);\n        }\n        else \n        {\n            const fuse = new Fuse(this.state.filtered_job, {\n                keys: ['title']\n            });\n\n            res = fuse.search(this.state.search_title);\n        }\n\n        var ans = [];\n        for(var i = 0 ; i < res.length ; i++ )\n        {\n            ans.push(res[i].item);\n        }\n        await this.setState({filtered_job: ans});\n    }\n\n    onChangeSearchTitle(e) {\n        this.setState({\n            search_title: e.target.value\n        })\n    }\n\n    onChangeFilterSalaryMax(e){\n        this.setState({\n            filter_salary_max: e.target.value\n        });\n    }\n\n    onChangeFilterSalaryMin(e){\n        this.setState({\n            filter_salary_min: e.target.value\n        });\n    }\n    \n    onChangeFilterType(e){\n        this.setState({\n            filter_type: e\n        });\n    }\n\n    onChangeFilterDuration(e){\n        this.setState({\n            filter_duration: e\n        });\n    }\n\n    renderSkills(skill) {\n        const skills = skill.map((d1) => \n        <div key={d1}> {d1} </div>\n        );\n\n        return skills;\n    }\n\n    getRecruiter(id , attr) {\n        \n        const len = this.state.recruiters.length;\n        if(len != 0)\n        {\n            for(var i = 0 ; i < len ; i++)\n            {   \n                if(id === this.state.recruiters[i].usrid)\n                {\n                    return this.state.recruiters[i].phone;\n                }\n            }\n\n        }\n    }\n    \n    onClickApp(d) {\n        localStorage.setItem('jobid' , d._id);\n        this.props.history.push({pathname: '/apply' , state: d._id});\n    }\n\n    onClickRec(d) {\n        localStorage.setItem('jobid' , d._id);\n        this.props.history.push({pathname: '/appviewjob' , state: d._id});\n    }\n\n    onClickDelete(d) {\n        const TokenVerify = {\n            token: localStorage.getItem(\"token\")\n        }\n        const url = \"http://localhost:5000/jobs/delete/\" + d._id;\n        axios.post(url , TokenVerify)\n        .then(result => {\n            if(result.data == 1) {\n                alert('Not Permitted!');\n                this.props.history.push('/login');\n            }\n\n            else {\n                alert('Successfully Deleted!');\n                window.location.reload(false);\n            }\n        })\n    }\n\n    onChangeSortBy(e){\n        this.setState({\n            sortby: e\n        })\n    }\n\n    onChangeSortIn(e){\n        this.setState({\n            sortin: e\n        })\n    }\n\n    onClickUpdate(d) {\n        this.props.history.push({pathname: '/updatejob' , state: d._id});\n    }\n\n    changeRating( newRating, name ) {\n        const url = \"http://localhost:5000/jobs/updateratings/\" + name;\n        const requirements = {\n            token: localStorage.getItem('token'),\n            rating: newRating\n        };\n        axios.post(url , requirements)\n        .then(result => {\n            if(result.data == 1)\n            {\n                alert('Not Authorized!');\n                this.props.history.push('/login');\n            }\n            else if(result.data == 2)\n            {\n                alert('Already Rated');\n            }\n            else{\n                alert('Successful!');\n                window.location.reload(false);\n            }\n        })\n    }\n\n    alreadyApplied(jobid) {\n\n        const len = this.state.applications.length;\n        if(len != 0){\n            for(var i = 0 ; i < len ; i++) {\n                if(jobid === this.state.applications[i].job)\n                {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    renderApply(d){\n        if(d.active == 1)\n        {\n            if(!this.alreadyApplied(d._id)) {\n                return (\n                    <Button size=\"sm\" variant=\"outline-primary\" onClick={() => this.onClickApp(d)}>Apply!</Button>\n                )\n            }\n            else {\n                return (<Button size=\"sm\" variant=\"outline-warning\">Applied!</Button>);\n            }\n        }\n        if(d.active == 2)\n        {\n            return(<Button size=\"sm\" variant=\"outline-danger\">Full!</Button>)\n        }\n    }\n\n    onCountOccurences(jobid)\n    {\n        var occurences = 0;\n        for(var i = 0 ; i < this.state.occurences.length ; i++)\n        {\n            console.log(this.state.occurences[i] , jobid);\n            if(this.state.occurences[i] === jobid)\n            {\n                occurences = occurences + 1;\n            }\n        }\n        return occurences;\n    }\n\n\n    renderJobApp(d) {\n        var cur_date = new Date();\n        cur_date = cur_date.getTime();\n        console.log(Date.parse(d.deadline) , cur_date , d.title);\n        return (\n            <div>\n            <table className=\"table table-bordered\">\n            <tbody>\n            <tr className=\"table-danger\">Title: {d.title}</tr>\n            <tr className=\"table-danger\">Deadline: {d.deadline}</tr>\n            <tr className=\"table-danger\">Type: {d.type}</tr>\n            <tr className=\"table-danger\">Duration: {d.duration} months {d.duration == 0 ? '(Indefinite)' : ''}</tr>\n            <tr className=\"table-danger\">Salary: {d.salary}</tr>\n            <tr className=\"table-danger\">Rating: {d.rating}</tr>\n            <tr className=\"table-danger\">Max Applicants: {d.max_applicants}</tr>\n            <tr className=\"table-danger\">Remaining Positions: {d.max_positions - this.onCountOccurences(d._id)}</tr>\n            <tr className=\"table-danger\"> Skills Required: \n            {this.renderSkills(d.skills)}\n            </tr>\n            <tr className=\"table-danger\"> Recruiter Contact: {this.getRecruiter(d.recruiter , 'phone')}</tr>\n            {this.renderApply(d)}\n            </tbody>\n            </table>\n            </div>\n       \n        );\n    }\n\n\n    renderJobRec(d) {\n        return (\n            <table className=\"table table-bordered\">\n                        <tbody>\n                        <tr className=\"table-danger\">Title: {d.title}</tr>\n                        <tr className=\"table-danger\">Deadline: {d.deadline}</tr>\n                        <tr className=\"table-danger\">Type: {d.type}</tr>\n                        <tr className=\"table-danger\">Duration: {d.duration} months  {d.duration == 0 ? '(Indefinite)' : ''}</tr>\n                        <tr className=\"table-danger\">Salary: {d.salary}</tr>\n                        <tr className=\"table-danger\">Rating: {d.rating}</tr>\n                        <tr className=\"table-danger\"> Skills Required: \n                        {this.renderSkills(d.skills)}\n                        </tr>\n                        <tr className=\"table-danger\">Max Applicants: {d.max_applicants}</tr>\n                        <tr className=\"table-danger\">Max Positions: {d.max_positions}</tr>\n                        <Button size=\"sm\" variant=\"outline-primary\" onClick={() => this.onClickRec(d)}>Look at applications</Button>{'  '}\n                        <Button size=\"sm\" variant=\"outline-danger\" onClick={() => this.onClickDelete(d)}>Delete Job</Button>\n                        <Button size=\"sm\" variant=\"outline-warning\" onClick={() => this.onClickUpdate(d)}>Update Job Details</Button>\n                        </tbody>\n            </table>\n        );\n\n    }\n\n    async onFilter(min_salary , max_salary , duration , type){\n        var filtering = []\n        const sortin = this.state.sortin;\n        const sortby = this.state.sortby;\n        if(this.state.filtered_job.length != 0)\n        {\n            filtering = this.state.filtered_job;\n        }\n        else \n        {\n            filtering = this.state.jobs;\n        }\n\n        if(!type) {\n            await this.setState({filtered_job: filtering.filter(job => (job.salary > min_salary && job.salary < max_salary && job.duration < duration))});\n        }\n        else {\n            await this.setState({filtered_job: filtering.filter(job => (job.salary > min_salary && job.salary < max_salary && job.type==type && job.duration < duration))});\n        }\n\n        if(this.state.filtered_job.length == 0)\n        {\n            await this.setState({no_results: 1});\n        }\n    \n        if(sortby)\n        {\n            if(sortby === 'Rating')\n            {\n                if(sortin === \"asc\")\n                {\n                    this.state.filtered_job.sort((a,b) =>  {\n                        if(a.rating > b.rating) {return 1} \n                        else if(a.rating < b.rating) {return -1}\n                        else return 0\n                    }   \n                    );\n                }\n    \n                else if(sortin === \"des\")\n                {\n                    this.state.filtered_job.sort((a,b) =>  {\n                        if(a.rating > b.rating) {return -1} \n                        else if(a.rating < b.rating) {return 1}\n                        else return 0\n                    }   \n                    );\n                }\n            }\n\n            if(sortby === 'Duration')\n            {\n                console.log('DURAAAAAATIONNN');\n                if(sortin === \"asc\")\n                {\n                    this.state.filtered_job.sort((a,b) =>  {\n                        if(a.duration > b.duration) {return 1} \n                        else if(a.duration < b.duration) {return -1}\n                        else return 0\n                    }   \n                    );\n                }\n    \n                else if(sortin === \"des\")\n                {\n                    this.state.filtered_job.sort((a,b) =>  {\n                        if(a.duration > b.duration) {return -1} \n                        else if(a.duration < b.duration) {return 1}\n                        else return 0\n                    }   \n                    );\n                }\n            }\n\n            if(sortby === 'Salary')\n            {\n                if(sortin === \"asc\")\n                {\n                    this.state.filtered_job.sort((a,b) =>  {\n                        if(a.salary > b.salary) {return 1} \n                        else if(a.salary < b.salary) {return -1}\n                        else return 0\n                    }   \n                    );\n                }\n    \n                else if(sortin === \"des\")\n                {\n                    this.state.filtered_job.sort((a,b) =>  {\n                        if(a.salary > b.salary) {return -1} \n                        else if(a.salary < b.salary) {return 1}\n                        else return 0\n                    }   \n                    );\n                }\n            }\n        }\n    }\n\n    async onClearFilter() {\n        await this.setState({filtered_job: []});\n        await this.setState({no_results: 0});\n    }\n\n    renderJobs(){\n        var cur_date = new Date();\n        cur_date = cur_date.getTime();\n        if(this.state.loading)\n        {\n            return (\n                <div>Loading ...</div>\n            );\n            \n        }\n\n        else if(localStorage.getItem(\"type\") === 'Applicant' && this.state.filtered_job.length == 0 && this.state.no_results == 0)\n        {\n            const job = this.state.jobs.map((d) => \n            <div> {((d.active==1 || d.active==2) && Date.parse(d.deadline) > cur_date)? this.renderJobApp(d) : '' } </div>\n            );\n            return (\n                <Container>{job}</Container>\n            );\n        }\n\n        else if(localStorage.getItem(\"type\") === 'Applicant' && (this.state.filtered_job.length != 0 || this.state.no_results == 1))\n        {\n            const job = this.state.filtered_job.map((d) => \n            <div> {((d.active==1 || d.active==2) && Date.parse(d.deadline) > cur_date) ? this.renderJobApp(d) : '' } </div>\n            );\n            return (\n                <Container>{job}</Container>\n            );\n        }\n\n        else if(localStorage.getItem(\"type\") === 'Recruiter' && (this.state.filtered_job.length == 0 && this.state.no_results == 0))\n        {\n\n            const job = this.state.jobs.map((d) => \n            <div> {(d.active==1 || d.active==2) ? this.renderJobRec(d) : '' } </div>\n            );\n            return (\n                <div>{job}</div>\n            );\n        }\n\n        else if(localStorage.getItem(\"type\") === 'Recruiter' && (this.state.filtered_job.length != 0 || this.state.no_results == 1))\n        {\n            const job = this.state.filtered_job.map((d) => \n            <div> {(d.active==1 || d.active==2) ? this.renderJobRec(d) : '' } </div>\n            );\n            return (\n                <Container>{job}</Container>\n            );\n        }\n    }\n    \n    render(){\n        return (\n            <div>\n                <h1>View All Jobs: </h1>\n                 <a className=\"btn btn-primary col px-md-5 p-3 border\" data-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                    Filter\n                </a>\n                <div className=\"flex-row collapse\" id=\"collapseExample\">\n                    <div className=\"p-2\">\n                        <div class=\"input-group\">\n                            <div class=\"form-outline\">\n                                <input type=\"search\" id=\"form1\" class=\"form-control\" placeholder=\"Search\" value={this.state.search_title} onChange={this.onChangeSearchTitle}/>\n                            </div>\n                            <Button size=\"sm\" variant=\"outline-success\" onClick={() => this.onFuzzy()}>Submit</Button>\n                        </div>\n                        <div className=\"d-flex flex-column\">\n                            <div>\n                                <label>Enter Max Duration: {this.state.filter_duration}</label>\n                                <DropdownButton alignRight title=\"Duration\" id=\"dropdown\" value={this.state.filter_duration} onSelect={this.onChangeFilterDuration} >\n                                    <Dropdown.Item eventKey=\"1\">1 (Shows Indefinite jobs)</Dropdown.Item>\n                                    <Dropdown.Divider />\n                                    <Dropdown.Item eventKey=\"2\">2</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"3\">3</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"4\">4</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"5\">5</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"6\">6</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"7\">7</Dropdown.Item>\n                                </DropdownButton>\n                            </div>\n                            <div className=\"d-flex flex-column\">\n                                <label>Enter Min Salary: {this.state.filter_salary_min}</label>\n                                <input type=\"range\" value={this.state.filter_salary_min} onChange={this.onChangeFilterSalaryMin} placeholder=\"Enter Salary\" className=\"form-range\" min=\"0\" max=\"1000000\" step=\"1000\"/>\n                            </div>\n                            <div className=\"d-flex flex-column\">\n                                <label>Enter Max Salary: {this.state.filter_salary_max}</label>\n                                <input type=\"range\" value={this.state.filter_salary_max} onChange={this.onChangeFilterSalaryMax} placeholder=\"Enter Salary\" className=\"form-range\" min=\"0\" max=\"1000000\" step=\"1000\"/>\n                            </div>\n                            <div>\n                                <label>Type: {this.state.filter_type}</label>\n                                <DropdownButton alignRight title=\"Type\" id=\"dropdown\" value={this.state.filter_type} onSelect={this.onChangeFilterType} >\n                                    <Dropdown.Item eventKey=\"Full-time\">Full-time</Dropdown.Item>\n                                    <Dropdown.Divider />\n                                    <Dropdown.Item eventKey=\"Contract\">Contract</Dropdown.Item>\n                                    <Dropdown.Divider />\n                                    <Dropdown.Item eventKey=\"Intern\">Intern</Dropdown.Item>\n                                </DropdownButton>\n                            </div>\n                            <div>\n                                    <label>Sort by: {this.state.sortby}</label>\n                                    <DropdownButton alignRight title=\"Sort by\" id=\"dropdown\" value={this.state.sortby} onSelect={this.onChangeSortBy} >\n                                        <Dropdown.Item eventKey=\"Rating\">Rating</Dropdown.Item>\n                                        <Dropdown.Divider />\n                                        <Dropdown.Item eventKey=\"Duration\">Duration</Dropdown.Item>\n                                        <Dropdown.Divider />\n                                        <Dropdown.Item eventKey=\"Salary\">Salary</Dropdown.Item>\n                                    </DropdownButton>\n                            </div>\n                            <div>\n                                    <label>Sort in: {this.state.sortin}</label>\n                                    <DropdownButton alignRight title=\"Sort in\" id=\"dropdown\" value={this.state.sortin} onSelect={this.onChangeSortIn} >\n                                        <Dropdown.Item eventKey=\"asc\">Ascending</Dropdown.Item>\n                                        <Dropdown.Divider />\n                                        <Dropdown.Item eventKey=\"des\">Descending</Dropdown.Item>\n                                    </DropdownButton>\n                            </div>\n                            <Button size=\"sm\" variant=\"outline-danger\" onClick={() => this.onFilter(this.state.filter_salary_min , this.state.filter_salary_max , this.state.filter_duration, this.state.filter_type)}>Filter</Button>\n                            <Button size=\"sm\" variant=\"outline-success\" onClick={() => this.onClearFilter()}>Clear</Button>\n                        </div>\n                    </div>\n                </div>\n\n                \n                <div className=\"align-self-stretch\">{this.renderJobs()}</div>\n                \n            </div>\n            \n        )\n    }\n\n}\n\nexport default withRouter(JobView);","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/apply.component.js",["154","155"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from \"react-router-dom\";\n\nclass Apply extends Component {\n    constructor(props) {\n        super(props);\n\n        this.componentWillMount = this.componentWillMount.bind(this);\n        this.onChangeSOP = this.onChangeSOP.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            jobid: '',\n            applicantid: '',\n            loading: true,\n            sop: ''\n        }\n    }\n\n    componentWillMount() {\n\n        const User = {\n            token: localStorage.getItem('token'),\n            type: localStorage.getItem('type')\n        }\n\n        const TokenVerify = {\n            token: localStorage.getItem('token')\n        }\n\n        const job = this.props.location.state;\n\n        if(!User.token || !job || User.type !== 'Applicant')\n        {\n            alert('Not permitted');\n            this.props.history.push('/login');\n        }\n\n        this.setState({jobid: job});\n\n        axios.post(\"http://localhost:5000/users/decode\" , TokenVerify)\n        .then(res => {\n            if(!res.data.id) {\n                alert('Not permitted');\n                this.props.history.push('/login');\n            }\n\n            else {\n                this.setState({applicantid: res.data.id});\n            }\n        })\n        .catch((error) => console.log(error));\n    }\n\n    onChangeSOP(e) {\n        this.setState({\n            sop: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newApplication = {\n            token: localStorage.getItem('token'),\n            sop: this.state.sop\n        }\n\n        const joburl = \"http://localhost:5000/jobs/\" + this.state.jobid;\n        axios.get(joburl)\n        .then(jobs => {\n            console.log(\"HEYYYYYY\");\n            const cur_date = new Date();\n            console.log(cur_date);\n            const cur_stamp = cur_date.getTime();\n            const deadline_stamp = Date.parse(jobs.data.deadline);\n            if(cur_stamp > deadline_stamp)\n            {\n                alert('Deadline Passed , cant apply');\n                this.props.history.push('/dashboard');\n            }\n\n        })\n        .catch(error => console.log(error));\n        const url = \"http://localhost:5000/applicants/applications/\" + this.state.applicantid + \"/\" + this.state.jobid;\n        console.log(url);\n        axios.post(url , newApplication)\n        .then(res => {\n            alert(res.data);\n            this.props.history.push('/jobview');   \n        })\n        .catch(error => console.log(error));\n    }\n\n    render() {\n\n        return (\n            <div>\n            <form onSubmit={this.onSubmit}>\n\n                <div className=\"form-group\">\n                    <label>Enter an SOP of not more than 250 words:</label>\n                    <input type=\"textarea\" className=\"form-control\" value={this.state.sop} onChange={this.onChangeSOP} />\n                </div>\n\n                <div className=\"form-group\">\n                    <input type=\"submit\" value=\"Apply\" className=\"btn btn-danger\" />\n                </div>\n            </form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Apply);","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/applicationview.component.js",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from \"react-router-dom\";\nimport jobaddComponent from './jobadd.component';\nimport StarRatings from 'react-star-ratings';\n\n\nclass viewApplication extends Component {\n    constructor(props) {\n        super(props);\n        this.componentWillMount = this.componentWillMount.bind(this);\n        this.renderUser = this.renderUser.bind(this);\n        this.getRecruiterDetails = this.getRecruiterDetails.bind(this);\n        this.getJobDetails = this.getJobDetails.bind(this);\n        this.state = {\n            applications: {},\n            jobs: {},\n            recruiters: {},\n            applicant: '',\n            loading: true,\n            users: {}\n        }\n    }\n\n\n    componentWillMount() {\n\n        const User = {\n            token: localStorage.getItem('token'),\n            type: localStorage.getItem('type')\n        }\n\n        const tokenVerify = {\n            token: localStorage.getItem('token')\n        }\n\n        if(User.type !== 'Applicant' || !User.token)\n        {\n            alert('Not Permitted');\n            this.props.history.push('/login');\n        }\n\n        axios.post(\"http://localhost:5000/users/decode\" , tokenVerify)\n        .then(res => {\n            if(!res.data.id) {\n                alert('Not permitted');\n                this.props.history.push('/login');\n            }\n\n            else {\n                this.setState({applicant: res.data.id});\n                const url = \"http://localhost:5000/applicants/applications/\" + res.data.id;\n                axios.post(url , tokenVerify)\n                .then(applications => {\n                    if(applications.data == 1) {\n                        alert('Not Permitted');\n                        this.props.history.push('login');\n                    }\n                    else {\n                        this.setState({applications: applications.data});\n                        var jobsids = [];\n                        const len = applications.data.length;\n                        if(len != 0) {\n                            for(var i = 0 ; i < len ; i++)\n                            {\n                                jobsids.push(applications.data[i].job);\n                            }\n                            const viewSome = {\n                                token: localStorage.getItem(\"token\"),\n                                jobarr: jobsids\n                            }\n                            axios.post(\"http://localhost:5000/jobs/viewsome\" , viewSome)\n                            .then(results => {\n                                if(res.data == 1) {\n                                    alert('Not Permitted');\n                                    this.props.history.push('login');\n                                }\n                                else {\n                                this.setState({jobs: results.data.jobs});\n                                this.setState({recruiters: results.data.recruiters});\n                                this.setState({users: results.data.users});\n                                this.setState({loading: false});\n                                }\n                            })\n                            .catch((error) => console.log(error));\n                        } \n                    }\n                })\n                .catch((error) => console.log(error));\n            }\n        })\n        .catch((error) => console.log(error));\n    }\n\n    getUserDetails(recid){\n        const len = this.state.users.length;\n        if(len != 0)\n        {\n            for(var i = 0 ; i < len ; i++)\n            {\n                if(recid === this.state.users[i]._id)\n                {\n                    return this.state.users[i].name\n                }\n            }\n        }\n    }\n\n    getRecruiterDetails(recid) {\n        \n        const len = this.state.recruiters.length;\n        if(len != 0)\n        {\n            for(var i = 0 ; i < len ; i++)\n            {\n                if(recid === this.state.recruiters[i].usrid)\n                {\n                    const recDetails = {\n                        phone: this.state.recruiters[i].phone,\n                        bio: this.state.recruiters[i].bio,\n                        name: this.getUserDetails(recid)\n                    }\n                    console.log(recDetails);\n                    return recDetails;\n                }\n            }\n        }\n    }\n\n    changeRating( newRating, name ) {\n        const url = \"http://localhost:5000/jobs/updateratings/\" + name;\n        const requirements = {\n            token: localStorage.getItem('token'),\n            rating: newRating\n        };\n        axios.post(url , requirements)\n        .then(result => {\n            if(result.data == 1)\n            {\n                alert('Not Authorized!');\n                this.props.history.push('/login');\n            }\n            else if(result.data == 2)\n            {\n                alert('Already Rated');\n            }\n            else{\n                alert('Successful!');\n                window.location.reload(false);\n            }\n        })\n    }\n\n    getJobDetails(jobid) {\n\n        const len = this.state.jobs.length;\n        if(len != 0)\n        {\n            for(var i = 0 ; i < len ; i++)\n            {\n                if(jobid === this.state.jobs[i]._id)\n                {\n                    const jobDetails = {\n                        recruiter: this.getRecruiterDetails(this.state.jobs[i].recruiter),\n                        title: this.state.jobs[i].title,\n                        rating: this.state.jobs[i].rating,\n                        id: this.state.jobs[i]._id,\n                        posting_date: this.state.jobs[i].posting_date,\n                    }\n                    return jobDetails\n                }\n            }\n        }\n\n    }\n\n    getStatus(status) {\n\n        if(status == 0)\n            return 'Submitted!';\n        else if(status == 1)\n            return 'Shortlisted!';\n        else if(status == 2)\n            return 'Accepted!';\n        else if(status == 3)\n            return 'Rejected :(';\n    }\n\n    renderJoinDate(d){\n        if(d.accept != 2)\n        {\n            return \"Not Available\";\n        }\n        else{\n            const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n            console.log(this.getJobDetails(d.job).posting_date);\n            return this.getJobDetails(d.job).posting_date.date + \"  \" + monthNames[this.getJobDetails(d.job).posting_date.month] + \", \" + this.getJobDetails(d.job).posting_date.year;\n        }\n    }\n\n    renderUser() { \n        if(this.state.loading)\n        {\n            return(\n                <div>Loading.....</div>\n            )\n        }\n        else\n        {\n            console.log(this.state.applications);\n            const job = this.state.applications.map((d) => \n            <table className=\"table table-bordered\">\n                <tbody>\n                <tr className=\"table-danger\">Phone Number of Recruiter: {this.getJobDetails(d.job).recruiter.phone}</tr>\n                <tr className=\"table-danger\">Name of Recruiter: {this.getJobDetails(d.job).recruiter.name}</tr>\n                <tr className=\"table-danger\">Recruiter Bio : {this.getJobDetails(d.job).recruiter.bio}</tr>\n                <tr className=\"table-danger\">Title: {this.getJobDetails(d.job).title}</tr>\n                <tr className=\"table-danger\">Your SOP: <table><td>{d.sop}</td></table></tr>\n                <tr className=\"table-danger\">Joining date: {this.renderJoinDate(d)}</tr>\n                <tr className=\"table-danger\">Status: {this.getStatus(d.accept)}</tr>\n                <StarRatings rating={this.getJobDetails(d.job).rating} starRatedColor=\"blue\" changeRating={this.changeRating} numberOfStars={5} name={this.getJobDetails(d.job).id}/>\n                </tbody>\n            </table>\n            );\n            return (\n                <div>\n                    <h1>View Applications</h1>\n                    <Container>{job}</Container>\n                </div>\n            );\n        }\n    }\n\n    render() {\n\n        return(\n        <div>{this.renderUser()}</div>\n        )\n    }\n\n}\nexport default withRouter(viewApplication);","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/updatejob.component.js",["171","172","173","174","175","176"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from \"react-router-dom\";\nconst jwt = require('jsonwebtoken');\n\n\n\nclass updateJob extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeDeadline = this.onChangeDeadline.bind(this);\n        this.componentWillMount = this.componentWillMount.bind(this);\n        this.onChangeMaxApplicants = this.onChangeMaxApplicants.bind(this);\n        this.onChangeMaxPositions = this.onChangeMaxPositions.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n           max_applicants: '',\n           max_positions: '',\n           deadline: '',\n           id: ''\n        };\n    }\n\n    componentWillMount() {\n        const job = this.props.location.state;\n        console.log(job);\n        if(!job){\n            this.props.history.push('/viewjob');\n        }\n        this.setState({id: job});\n    }\n\n    onChangeDeadline(e) {\n        this.setState({\n            deadline: e.target.value\n        })\n    }\n\n    onChangeMaxApplicants(e) {\n        this.setState({\n            max_applicants: e.target.value\n        })\n    }\n\n    onChangeMaxPositions(e) {\n        this.setState({\n            max_positions: e.target.value\n        })\n    }\n\n    onSubmit(e) {\n        const deadlineDate = new Date(this.state.deadline);\n        const cur_date = new Date();\n        const cur_stamp = cur_date.getTime();\n        const deadline_stamp = Date.parse(deadlineDate);\n        if(cur_stamp >= deadline_stamp)\n        {\n            alert(\"Enter the dates properly\");\n            window.location.reload(false);\n        }\n        console.log(cur_stamp , deadline_stamp);\n        \n        e.preventDefault();\n        const updateDetails = {\n            max_applicants: this.state.max_applicants,\n            deadline: this.state.deadline,\n            max_positions: this.state.max_positions,\n            token: localStorage.getItem('token')\n        }\n        const url = \"http://localhost:5000/jobs/update/\" + this.state.id;\n        axios.post(url,updateDetails)\n        .then(result => {\n            if(result.data == 0)\n            {\n                console.log(result.data);\n                alert('Max applicants should be greater than max positions');\n            }\n            else if(result.data == 1)\n            {\n                alert('Not permitted');\n                this.props.history.push('/login');\n            }\n            else if(result.data == 2)\n            {\n                alert('Max Applicants is less than applications');\n                this.props.history.push('/jobview');\n            }\n            else if(result.data == 3)\n            {\n                alert(\"Max Positions is less than accepted applicants\");\n                this.props.history.push('/jobview');\n            }\n            else {\n                alert(result.data);\n                this.props.history.push('/jobview');\n            }\n        })\n\n    }\n\n    render(){\n        return (\n            <div>\n            <form onSubmit={this.onSubmit}>\n\n                <div className=\"form-group\">\n                    <label>Max Applicants:</label>\n                    <input type=\"text\" className=\"form-control\" value={this.state.max_applicants} onChange={this.onChangeMaxApplicants} required=\"true\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Max Positions:</label>\n                    <input type=\"text\" className=\"form-control\" value={this.state.max_positions} onChange={this.onChangeMaxPositions} required=\"true\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter the Deadline for application</label>\n                    <input type=\"datetime-local\" className='form-control' value={this.state.deadline} onChange={this.onChangeDeadline} timeFormat={true} inputProps={{ placeholder: \"Deadline\" }} required=\"true\"/>\n                </div>\n                \n                <div className=\"form-group\">\n                    <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" />\n                </div>\n            </form>\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter(updateJob);","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/appviewjob.component.js",["177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from \"react-router-dom\";\nimport StarRatings from 'react-star-ratings';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport emailjs from 'emailjs-com';\nimport{ init } from 'emailjs-com';\ninit(\"user_QxRnnsjaBgxr7GrTWtJ11\");\n\n\n\nclass appViewJob extends Component {\n    constructor(props) {\n        super(props);\n        this.componentWillMount = this.componentWillMount.bind(this);\n        this.renderApps = this.renderApps.bind(this);\n        this.renderAppDetails = this.renderAppDetails.bind(this);\n        this.onAccept = this.onAccept.bind(this);\n        this.onReject = this.onReject.bind(this);\n        this.onShortlist = this.onShortlist.bind(this);\n        this.onChangeSortBy = this.onChangeSortBy.bind(this);\n        this.onChangeSortIn = this.onChangeSortIn.bind(this);\n        this.clearSort = this.clearSort.bind(this);\n        this.state = {\n            loading: true,\n            applicants: {},\n            applications: {},\n            users: {},\n            sortby: '',\n            sortin: 'asc',\n            sorted_app: [],\n            clear_sorted: 1,\n            id: '',\n            rec_name: ''\n        }\n    }\n\n    componentWillMount() {\n\n        const User = {\n            token: localStorage.getItem('token'),           \n            type: localStorage.getItem('type')\n        }\n\n        const tokenVerify = {\n            token: localStorage.getItem('token')\n        }\n\n        if(User.type !== 'Recruiter' || !User.token)\n        {\n            alert('Not Permitted');\n            this.props.history.push('/login');\n        }\n\n        const jobid = this.props.location.state;\n        if(!jobid)\n        {\n            this.props.history.push('/jobview');\n        }\n        const url = \"http://localhost:5000/jobs/\" + jobid + \"/applications\";     \n        axios.post(url , tokenVerify)\n        .then(results => {\n            if(results.data == 1) {\n                alert('Not Permitted');\n                this.props.history.push('/login');\n            }\n\n            else {\n                this.setState({applicants: results.data.applicants});\n                this.setState({applications: results.data.applications});\n                this.setState({users: results.data.users});\n                axios.post(\"http://localhost:5000/users/decode\" , tokenVerify)\n                .then(usr => {\n                    this.setState({id: usr.data.id});\n                    const url1 = \"http://localhost:5000/recruiters/\" + usr.data.id\n                    axios.post(url1 , tokenVerify)\n                    .then(user => {\n                        this.setState({rec_name: user.data.users.name});\n                    })\n                    .catch((error) => console.log(error));\n                })\n                .catch((error) => console.log(error));\n                this.setState({loading: false});\n            }\n        })\n        .catch((error) => console.log(error));\n\n    }\n\n    onAccept(d) {\n        console.log('Accept');\n        const url = 'http://localhost:5000/jobs/updateapplication/' + d._id;\n        const details = {\n            accept: 2,\n            token: localStorage.getItem('token')\n        }\n        axios.post(url , details)\n        .then(result => {\n            if(result.data == 1) alert('Try again, something went wrong!');\n            else{\n                emailjs.send(\"service_isjur45\",\"template_t2qvb4s\",{\n                    email: this.getApplicantDetails(d.applicant).email,\n                    recruiter: this.state.rec_name\n                })\n                .then(emailed => console.log(emailed))\n                .catch((error) => console.log(error));\n                alert(result.data);\n                window.location.reload(false);\n            }\n        })\n        .catch((error) => console.log(error));\n    }\n\n    onShortlist(d) {\n        console.log('Shortlist');\n        const url = 'http://localhost:5000/jobs/updateapplication/' + d._id;\n        const details = {\n            accept: 1,\n            token: localStorage.getItem('token')\n        }\n        axios.post(url , details)\n        .then(result => {\n            if(result.data == 1) alert('Try again, something went wrong!');\n            if(result.data == 2) alert('Surpassed count for acceptance');\n            else{\n                alert(result.data);\n                window.location.reload(false);\n            }\n        })\n        .catch((error) => console.log(error));\n    }\n\n    onReject(d) {\n        console.log('Reject');\n        const url = 'http://localhost:5000/jobs/updateapplication/' + d._id;\n        const details = {\n            accept: 3,\n            token: localStorage.getItem('token')\n        }\n        axios.post(url , details)\n        .then(result => {\n            if(result.data == 1) alert('Try again, something went wrong!');\n            else{\n                console.log(\"In Here\");\n                alert(result.data);\n                window.location.reload(false);\n            }\n        })\n        .catch((error) => console.log(error));\n    }\n\n    onRenderButtons(d) {\n\n        if(d.accept == 0)\n        {\n            return (\n                <Container>\n                <Button size=\"sm\" variant=\"outline-warning\" onClick={() => this.onShortlist(d)}>Shortlist</Button>{' '}\n                <Button size=\"sm\" variant=\"outline-danger\" onClick={() => this.onReject(d)}>Reject</Button>\n                </Container>\n            )\n        }\n\n        if(d.accept == 1)\n        {\n            return (\n                <Container>\n                <Button size=\"sm\" variant=\"outline-primary\" onClick={() => this.onAccept(d)}>Accept</Button>{' '}\n                <Button size=\"sm\" variant=\"outline-danger\" onClick={() => this.onReject(d)}>Reject</Button>\n                </Container>\n            )\n        }\n\n        if(d.accept == 2)\n        {\n            return (\n                ''\n            )\n        }\n    }\n\n    onChangeSortBy(e){\n        this.setState({\n            sortby: e\n        })\n    }\n\n    onChangeSortIn(e){\n        this.setState({\n            sortin: e\n        })\n    }\n\n    onClearSorted(e){\n        this.setState({\n            clear_sorted: 1\n        })\n    }\n\n    async clearSort() {\n\n        await this.setState({\n            clear_sorted: 1\n        });\n        await this.setState({\n            sorted_app: []\n        })\n    }\n\n    getApplicantDetails(applicantid) {\n        const len = this.state.applicants.length;\n        if(len != 0) {\n            for(var i = 0 ; i < len ; i++)\n            {\n                if(this.state.applicants[i].usrid === applicantid) {\n                    const applicantDetails = {\n                        skills: this.state.applicants[i].skills,\n                        education: this.state.applicants[i].education,\n                        languages: this.state.applicants[i].languages,\n                        email: this.getUserDetails(applicantid , 'email'),\n                        name: this.getUserDetails(applicantid , 'name'),\n                        rating: this.state.applicants[i].rating,\n                        usrid: this.state.applicants[i].usrid,\n                        resume: (this.state.applicants[i].hasOwnProperty('resume') ? this.state.applicants[i].resume : null)\n                    }\n                    return applicantDetails;\n                }\n            }\n        }\n\n    }\n\n    getUserDetails(userid , attr) {\n        const len = this.state.users.length;\n        if(len != 0) {\n            for(var i = 0 ; i < len ; i++)\n            {\n                if(this.state.users[i]._id === userid)\n                {\n                    if(attr === 'email')\n                    {\n                        return this.state.users[i].email;\n                    }\n\n                    if(attr === 'name')\n                    {\n                        return this.state.users[i].name;\n                    }\n                }\n            }\n        }\n    }\n\n    getStatus(status) {\n\n        if(status == 0)\n            return 'Submitted!';\n        else if(status == 1)\n            return 'Shortlisted!';\n        else if(status == 2)\n            return 'Accepted!';\n        else if(status == 3)\n            return 'Rejected :(';\n    }\n\n    changeRating( newRating , name ) {\n        const url = \"http://localhost:5000/applicants/updateratings/\" + name;\n        const requirements = {\n            token: localStorage.getItem('token'),\n            rating: newRating\n        };\n        axios.post(url , requirements)\n        .then(result => {\n            if(result.data == 1)\n            {\n                alert('Not Authorized!');\n                this.props.history.push('/login');\n            }\n            else if(result.data == 2)\n            {\n                alert('Already Rated');\n            }\n            else{\n                alert('Successful!');\n                window.location.reload(false);\n            }\n        })\n    }\n\n    onSort(sortby, sortin){\n        this.setState({loading: true});\n        this.setState({sorted_app: this.state.applications});\n        if(sortby === 'Rating')\n        {\n            if(sortin === \"asc\")\n            {\n                this.state.sorted_app.sort((a,b) =>  {\n                    if(this.getApplicantDetails(a.applicant).rating > this.getApplicantDetails(b.applicant).rating) {return 1} \n                    else if(this.getApplicantDetails(a.applicant).rating < this.getApplicantDetails(b.applicant).rating) {return -1}\n                    else return 0\n                }   \n                );\n            }\n\n            else if(sortin === \"des\")\n            {\n                this.state.sorted_app.sort((a,b) =>  {\n                    if(this.getApplicantDetails(a.applicant).rating > this.getApplicantDetails(b.applicant).rating) {return -1} \n                    else if(this.getApplicantDetails(a.applicant).rating < this.getApplicantDetails(b.applicant).rating) {return +1}\n                    else return 0\n                }   \n                );\n            }\n        }\n\n        if(sortby === 'Date')\n        {\n            if(sortin === \"asc\")\n            {\n                this.state.sorted_app.sort((a,b) =>  {\n                    if(a.applied > b.applied) {return 1} \n                    else if(a.applied < b.applied) {return -1}\n                    else return 0\n                }   \n                );\n            }\n\n            else if(sortin === \"des\")\n            {\n                this.state.sorted_app.sort((a,b) =>  {\n                    if(a.applied > b.applied) {return -1} \n                    else if(a.applied < b.applied) {return +1}\n                    else return 0\n                }   \n                );\n            }\n        }\n\n        if(sortby === 'Name')\n        {\n            if(sortin === \"asc\")\n            {\n                this.state.sorted_app.sort((a,b) =>  {\n                    if(this.getApplicantDetails(a.applicant).name.toLowerCase()> this.getApplicantDetails(b.applicant).name.toLowerCase()) {return 1} \n                    else if(this.getApplicantDetails(a.applicant).name.toLowerCase() < this.getApplicantDetails(b.applicant).name.toLowerCase()) {return -1}\n                    else return 0\n                }   \n                );\n            }\n\n            else if(sortin === \"des\")\n            {\n                this.state.sorted_app.sort((a,b) =>  {\n                    if(this.getApplicantDetails(a.applicant).name.toLowerCase() > this.getApplicantDetails(b.applicant).name.toLowerCase()) {return -1} \n                    else if(this.getApplicantDetails(a.applicant).name.toLowerCase() < this.getApplicantDetails(b.applicant).name.toLowerCase()) {return 1}\n                    else return 0\n                }   \n                );\n            }\n        }\n        this.setState({loading: false});\n        this.setState({clear_sorted: 0});\n    };\n\n    checkresume(d) {\n        console.log(this.getApplicantDetails(d.applicant))\n        if(this.getApplicantDetails(d.applicant).resume)\n        {\n            if(this.getApplicantDetails(d.applicant).resume == 1)\n            console.log(\"APPLICANT\" , d.applicant);\n            const path = 'file:///Users/karthik/Desktop/linkedin-clone/public/' + d.applicant + '.pdf';\n            return(<a href={path} download>Download</a>)     \n        }\n        return '';\n\n    }\n\n    renderAppDetails(d) {\n        if(d.accept == 3)\n        {\n            return '';\n        }\n        const appl = this.getApplicantDetails(d.applicant);\n        const skill_render = appl.skills.map((d) => <li>{d}</li>);\n        const lang_render = appl.languages.map((d) => <li>{d}</li>);\n        const edu_render = appl.education.map((d) =>\n        <tr>\n        <td>{d.college} </td>\n        <td>{d.start_year}</td>\n        <td>{d.end_year} </td>\n        </tr>\n        );\n        console.log(skill_render);\n        return (\n        <table className=\"table table-bordered\">\n                    <tbody>\n                    <tr className=\"table-danger\">Name: {appl.name}</tr>\n                    <tr className=\"table-danger\">Name: {appl.email}</tr>\n                    <tr className=\"table-danger\">Date applied: {d.applied}</tr>\n                    <tr className=\"table-danger\">SOP: <table><td>{d.sop}</td></table> </tr>\n                    <tr className=\"table-danger\">Skills: {skill_render}</tr>\n                    <tr className=\"table-danger\">Languages: {lang_render}</tr>\n                    <tr className=\"table-danger\">Education: {edu_render}</tr>\n                    <tr className=\"table-danger\">Status:  {this.getStatus(d.accept)}</tr>\n                    {this.checkresume(d)}\n                    {this.onRenderButtons(d)}\n                    </tbody>\n        </table>\n        );\n    };\n\n    renderApps(){\n\n        if(this.state.loading || !this.state.applications)\n        {\n            console.log(localStorage.getItem(\"type\"));\n            return (\n                <div>Loading ...</div>\n            );\n            \n        }\n\n        else if(localStorage.getItem(\"type\") === 'Recruiter' && this.state.clear_sorted == 1)\n        {\n            console.log('Clear Sorted invoked');\n            const apps = this.state.applications.map((d) => \n            <div> {this.renderAppDetails(d)} </div>\n            );\n            return (\n                <div>{apps}</div>\n            );\n        }\n\n        else if(localStorage.getItem(\"type\") === 'Recruiter' && this.state.clear_sorted == 0)\n        {\n\n            const apps = this.state.sorted_app.map((d) => \n            <div> {this.renderAppDetails(d)} </div>\n            );\n            return (\n                <div>{apps}</div>\n            );\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                <a className=\"btn btn-primary col px-md-5 p-3 border\" data-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                    Filter\n                </a>\n                <div className=\"flex-row collapse\" id=\"collapseExample\">\n                <div className=\"d-flex flex-row\">\n                    <div className=\"d-flex flex-column p-4\">\n                        <div>\n                            <label>Sort by: {this.state.sortby}</label>\n                            <DropdownButton alignRight title=\"Sort by\" id=\"dropdown\" value={this.state.sortby} onSelect={this.onChangeSortBy} >\n                                <Dropdown.Item eventKey=\"Rating\">Rating</Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item eventKey=\"Name\">Name</Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item eventKey=\"Date\">Application date</Dropdown.Item>\n                            </DropdownButton>\n                        </div>\n                        <div>\n                            <label>Sort in: {this.state.sortin}</label>\n                            <DropdownButton alignRight title=\"Sort in\" id=\"dropdown\" value={this.state.sortin} onSelect={this.onChangeSortIn} >\n                                <Dropdown.Item eventKey=\"asc\">Ascending</Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item eventKey=\"des\">Descending</Dropdown.Item>\n                            </DropdownButton>\n                        </div>\n                        <div className=\"p-2\">\n                            <Button size=\"sm\" variant=\"outline-primary\" onClick={() => this.onSort(this.state.sortby , this.state.sortin)}>Sort</Button>\n                        </div>\n                    </div>\n                </div>\n                </div>\n\n                <div className=\"p-4 align-self-center\">{this.renderApps()}</div>\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter(appViewJob);","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/updaterecruiter.component.js",["199","200","201","202","203"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\n\nclass recruiterUpdate extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangeBio = this.onChangeBio.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onChangePhone = this.onChangePhone.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n\n            name: '',\n            email: '',\n            bio: '',\n            phone: '',\n            password: '',\n            id: '',\n            imgencode: ''\n        }\n    }\n\n    componentWillMount() {\n        const TokenVerify = {\n            token: localStorage.getItem('token')\n        };\n        this.setState({type: 'Recruiter'});\n            axios\n            .post(\"http://localhost:5000/users/decode\" , TokenVerify)\n            .then(result => {\n                this.setState({id: result.data.id});\n                if(!result.data.id)\n                {\n                    alert('Not permitted');\n                    this.props.history.push('/');\n                }\n                const url = \"http://localhost:5000/recruiters/\" + result.data.id;\n                axios\n                    .post(url , TokenVerify)\n                    .then(userdetails => {\n                        this.setState({name: userdetails.data.users.name});\n                        this.setState({email: userdetails.data.users.email});\n                        this.setState({phone: userdetails.data.recruiter.phone});\n                        this.setState({bio: userdetails.data.recruiter.bio});\n                        this.setState({imgencode: userdetails.data.users.profile})\n                        console.log(userdetails.data); \n                    })\n                    .catch(function(error) {\n                        console.log(error);\n                });\n        \n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n\n    }\n\n    onChangeName(e){\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    onChangeEmail(e){\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e){\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    onChangeBio(e){\n        this.setState({\n            bio: e.target.value\n        });\n    }\n\n    onChangePhone(e){\n        this.setState({\n            phone: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        if(!this.state.password){ \n            alert('Enter old password/new password for update');\n            window.location.reload(false);\n        }\n\n        const recruiter = {\n            token: localStorage.getItem('token'),\n            id: this.state.id,\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            phone: this.state.phone,\n            bio: this.state.bio,\n            imgencode: this.state.imgencode\n        }\n        const url = \"http://localhost:5000/recruiters/update/\" + this.state.id;\n        axios.post(url , recruiter).then(result => { \n            if(result.data ==  1) {alert('Success'); this.props.history.push('/dashboard'); }\n            else alert(result.data);\n        })\n        .catch(error => console.log(error));\n        console.log(recruiter);\n\n    }\n\n    render(){\n        return (\n            <div>\n                <h3> Update Recruiter Details </h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Name: </label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.onChangeName} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Email: </label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.email} onChange={this.onChangeEmail} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Phone: </label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.phone} onChange={this.onChangePhone} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Password: </label>\n                        <input type=\"password\" className=\"form-control\" value={this.state.password} onChange={this.onChangePassword} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Bio: </label>\n                        <input type=\"textbox\" className=\"form-control\" value={this.state.bio} onChange={this.onChangeBio} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Update Recruiter details\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n\n};\n\nexport default withRouter(recruiterUpdate);\n\n\n\n","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/updateapplicant.component.js",["204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router-dom\";\n\nclass updateApplicant extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onChangeLanguages = this.onChangeLanguages.bind(this);\n        this.onChangeRating = this.onChangeRating.bind(this);\n        this.onChangeEducation = this.onChangeEducation.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.skilladdClick = this.skilladdClick.bind(this);\n        this.skillhandleChange = this.skillhandleChange.bind(this);\n        this.skillremoveClick = this.skillremoveClick.bind(this);\n        this.skillcreateUI = this.skillcreateUI.bind(this);\n        this.languagecreateUI = this.languagecreateUI.bind(this);\n        this.languagehandleChange = this.languagehandleChange.bind(this);\n        this.languageremoveClick = this.languageremoveClick.bind(this);\n        this.languageaddClick = this.languageaddClick.bind(this);\n        this.educationaddClick = this.educationaddClick.bind(this);\n        this.educationcreateUI = this.educationcreateUI.bind(this);\n        this.educationhandleChange = this.educationhandleChange.bind(this);\n        this.educationremoveClick = this.educationremoveClick.bind(this);\n\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            rating: 0,\n            skills: [{skill: ''}],\n            languages: [{language: ''}],\n            education: [{college: \"\" , start_year: 0 , end_year: 0}],\n            id: '',\n            resume: '',\n            imgencode: ''\n        }\n    }\n\n    componentWillMount() {\n\n        const TokenVerify = {\n            token: localStorage.getItem('token')\n        };\n\n        axios\n        .post(\"http://localhost:5000/users/decode\" , TokenVerify)\n        .then(result => {\n            this.setState({id: result.data.id});\n            if(!result.data.id)\n            {\n                alert('Not permitted');\n                this.props.history.push('/');\n            }\n            const url = \"http://localhost:5000/applicants/\" + result.data.id;\n            axios\n            .post(url , TokenVerify)\n            .then(userdetails => {\n                console.log(userdetails);\n                this.setState({name: userdetails.data.users.name});\n                this.setState({email: userdetails.data.users.email});\n                this.setState({skills: userdetails.data.applicant.skills});\n                this.setState({resume: userdetails.data.applicant.resume});\n                this.setState({imgencode: userdetails.data.users.profile})\n                var skill_set = []\n                const len1 = userdetails.data.applicant.skills.length;\n                if(len1 != 0 ) {\n                    for(var i = 0 ; i < len1 ; i++)\n                    {\n                        skill_set.push({\"skill\": userdetails.data.applicant.skills[i]});\n                    }\n                    this.setState({skills: skill_set});\n                }\n                var lang_set = [];\n                const len2 = userdetails.data.applicant.languages.length;\n                if(len2 != 0 ) {\n                    for(var i = 0 ; i < len2 ; i++)\n                    {\n                        lang_set.push({\"language\": userdetails.data.applicant.languages[i]});\n                    }\n                    this.setState({languages: lang_set});\n                }\n                this.setState({rating: userdetails.data.applicant.rating});\n                this.setState({education: userdetails.data.applicant.education});\n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n        })\n        .catch(function(error) {console.log(error)});\n\n    }\n    //Skills UI \n    skilladdClick(){\n        this.setState(prevState => ({ \n            skills: [...prevState.skills, '']\n        }))\n    }\n\n    skillhandleChange(i, e) {\n        const { name , value } = e.target;\n        let skills = [...this.state.skills];\n        skills[i] = {...skills[i], [name]: value}; \n        this.setState({ skills });\n    }\n\n    skillremoveClick(i){\n        let skills = [...this.state.skills];\n        skills.splice(i, 1);\n        this.setState({ skills });\n    }\n\n    skillcreateUI(){\n        return this.state.skills.map((el, i) => (\n          <div key={i} className=\"d-flex\">\n             <input placeholder=\"Skill\" name=\"skill\" className=\"form-control\" value={el.skill ||''} onChange={this.skillhandleChange.bind(this, i)} />\n             <input type='button' className=\"btn btn-secondary\" value='remove' onClick={this.skillremoveClick.bind(this, i)}/>\n          </div>          \n        ))\n    }\n\n    //Language UI\n    languageaddClick(){\n        this.setState(prevState => ({ \n            languages: [...prevState.languages, '']\n        }))\n    }\n\n    languagehandleChange(i, e) {\n        const { name, value } = e.target;\n        let languages = [...this.state.languages];\n        languages[i] = {...languages[i], [name]: value};\n        this.setState({ languages });\n    }\n\n    languageremoveClick(i){\n        let languages = [...this.state.languages];\n        languages.splice(i, 1);\n        this.setState({ languages });\n    }\n\n    languagecreateUI(){\n        return this.state.languages.map((el, i) => (\n          <div key={i} className=\"d-flex\">\n             <input placeholder=\"Language\" name=\"language\" className=\"form-control\" value={el.language ||''} onChange={this.languagehandleChange.bind(this, i)} />\n             <input type='button' className=\"btn btn-secondary\" value='remove' onClick={this.languageremoveClick.bind(this, i)}/>\n          </div>          \n        ))\n    }\n\n    //Education UI\n    educationaddClick(){\n        this.setState(prevState => ({ \n            education: [...prevState.education, {college: \"\" , start_year: 0 , end_year: 0}]\n        }))\n    }\n\n    educationhandleChange(i, e) {\n        const { name, value } = e.target;\n        let education = [...this.state.education];\n        education[i] = {...education[i], [name]: value};\n        this.setState({ education });\n    }\n\n    educationremoveClick(i){\n        let education = [...this.state.education];\n        education.splice(i, 1);\n        this.setState({ education });\n    }\n\n    educationcreateUI(){\n        return this.state.education.map((el, i) => (\n          <div key={i} className=\"d-flex\">\n            Education {i}: \n            <input placeholder=\"College\" name=\"college\" className=\"form-control\" value={el.college ||''} onChange={this.educationhandleChange.bind(this, i)} />\n            <input placeholder=\"Start Year\" name=\"start_year\" className=\"form-control\" value={el.start_year || this.state.education.start_year} onChange={this.educationhandleChange.bind(this, i)} />\n            <input placeholder=\"End Year\" name=\"end_year\" className=\"form-control\" value={el.end_year || this.state.education.start_year} onChange={this.educationhandleChange.bind(this, i)} />\n            <input type='button' className=\"btn btn-secondary\" value='remove' onClick={this.educationremoveClick.bind(this, i)}/>\n          </div>          \n        ))\n    }\n\n    onChangeName(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n    onChangeEducation(e) {\n        this.setState({\n            education: e.target.value\n        });\n    }\n    onChangeLanguages(e) {\n        this.setState({\n            languages: e.target.value\n        });\n    }\n    onChangeRating(e) {\n        this.setState({\n            rating: e.target.value\n        });\n    }\n    onSubmit(e) {\n        if(!this.state.password){ \n        alert('Enter old password/new password for update');\n        window.location.reload(false)\n        }\n        e.preventDefault();\n        const len = this.state.education.length;\n        if(len != 0)\n        {\n            for(var i = 0 ; i < len ; i++)\n            {\n                this.state.education[i].start_year = this.state.education[i].start_year;\n                this.state.education[i].end_year =  this.state.education[i].end_year;\n            }\n        }\n\n        const skill_len = this.state.skills.length;\n        var skill = [];\n        if(skill_len != 0)\n        {\n            for(var i = 0 ; i < skill_len ; i++)\n            {\n                skill.push(this.state.skills[i].skill);\n            }\n        }\n        var lang = [];\n        const lang_len = this.state.languages.length;\n        if(lang_len != 0)\n        {\n            for(var i = 0 ; i < lang_len ; i++)\n            {\n                console.log('In');\n                lang.push(this.state.languages[i].language);\n            }\n        }\n        const applicant = {\n            id: this.state.id,\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            skills: skill,\n            languages: lang,\n            rating: this.state.rating,\n            education: this.state.education,\n            token: localStorage.getItem('token'),\n            resume: this.state.resume,\n            imgencode: this.state.imgencode\n        }\n\n        const url = \"http://localhost:5000/applicants/update/\" + this.state.id;\n        axios.post(url, applicant).then(result => { \n            if(result.data == 1) {alert('Successful'); this.props.history.push('/dashboard');}\n            else {console.log(result.data);}\n        })\n        .catch(error => console.log(error));\n        console.log(applicant);\n        \n    }\n    render() {\n        return (\n            <div>\n      <h3>Update applicant</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label>Name: </label>\n          <input \n              type=\"text\" \n              className=\"form-control\"\n              value={this.state.name}\n              onChange={this.onChangeName}\n              />\n        </div>\n\n        <div className=\"form-group\"> \n          <label>Email: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.email}\n              onChange={this.onChangeEmail}\n              />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Password: </label>\n          <input \n              type=\"text\" \n              className=\"form-control\"\n              value={this.state.password}\n              onChange={this.onChangePassword}\n              />\n        </div>\n        \n\n        {this.skillcreateUI()}\n        <input type='button' value='add' className=\"btn btn-secondary pull-right\" onClick={this.skilladdClick.bind(this)}/>\n\n        {this.languagecreateUI()}\n        <input type='button' value='add' className=\"btn btn-secondary pull-right\" onClick={this.languageaddClick.bind(this)}/>\n\n        {this.educationcreateUI()}\n        <input type='button' value='add' className=\"btn btn-secondary pull-right\" onClick={this.educationaddClick.bind(this)}/>\n\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Update Applicant\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n        )\n    }\n}\n\n\nexport default withRouter(updateApplicant);\n","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/viewaccepted.component.js",["218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from \"react-router-dom\";\nimport StarRatings from 'react-star-ratings';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass appViewJob extends Component {\n    constructor(props) {\n        super(props);\n        this.componentWillMount = this.componentWillMount.bind(this);\n        this.renderApps = this.renderApps.bind(this);\n        this.renderAppDetails = this.renderAppDetails.bind(this);\n        this.onChangeSortBy = this.onChangeSortBy.bind(this);\n        this.onChangeSortIn = this.onChangeSortIn.bind(this);\n        this.clearSort = this.clearSort.bind(this);\n        this.state = {\n            loading: true,\n            applicants: {},\n            applications: {},\n            users: {},\n            sortby: '',\n            sortin: 'asc',\n            sorted_app: [],\n            clear_sorted: 1,\n            jobs: []\n        }\n    }\n\n    componentWillMount() {\n\n        const User = {\n            token: localStorage.getItem('token'),           \n            type: localStorage.getItem('type')\n        }\n\n        const tokenVerify = {\n            token: localStorage.getItem('token')\n        }\n\n        if(User.type !== 'Recruiter' || !User.token)\n        {\n            alert('Not Permitted');\n            this.props.history.push('/login');\n        }\n        console.log(User.token);\n        const url = \"http://localhost:5000/recruiters/accepted/viewall\";\n        axios.post(url , tokenVerify)\n        .then(results => {\n            if(results.data == 1 || results.data == 2) {\n                alert('Not Data');\n                this.props.history.push('/login');\n            }\n\n            else {\n                this.setState({applicants: results.data.applicants});\n                this.setState({applications: results.data.applications});\n                this.setState({users: results.data.users});\n                this.setState({jobs: results.data.jobs});\n                this.setState({loading: false});\n            }\n        })\n\n    }\n\n    onChangeSortBy(e){\n        this.setState({\n            sortby: e\n        })\n    }\n\n    onChangeSortIn(e){\n        this.setState({\n            sortin: e\n        })\n    }\n\n    onClearSorted(e){\n        this.setState({\n            clear_sorted: 1\n        })\n    }\n\n    async clearSort() {\n\n        await this.setState({\n            clear_sorted: 1\n        });\n        await this.setState({\n            sorted_app: []\n        })\n    }\n\n    getApplicantDetails(applicantid) {\n        const len = this.state.applicants.length;\n        if(len != 0) {\n            for(var i = 0 ; i < len ; i++)\n            {\n                if(this.state.applicants[i].usrid === applicantid) {\n                    const applicantDetails = {\n                        skills: this.state.applicants[i].skills,\n                        education: this.state.applicants[i].education,\n                        languages: this.state.applicants[i].languages,\n                        email: this.getUserDetails(applicantid , 'email'),\n                        name: this.getUserDetails(applicantid , 'name'),\n                        rating: this.state.applicants[i].rating,\n                        usrid: this.state.applicants[i].usrid\n                    }\n                    return applicantDetails;\n                }\n            }\n        }\n\n    }\n\n    getUserDetails(userid , attr) {\n        const len = this.state.users.length;\n        if(len != 0) {\n            for(var i = 0 ; i < len ; i++)\n            {\n                if(this.state.users[i]._id === userid)\n                {\n                    if(attr === 'email')\n                    {\n                        return this.state.users[i].email;\n                    }\n\n                    if(attr === 'name')\n                    {\n                        return this.state.users[i].name;\n                    }\n                }\n            }\n        }\n    }\n\n    getStatus(status) {\n\n        if(status == 0)\n            return 'Submitted!';\n        else if(status == 1)\n            return 'Shortlisted!';\n        else if(status == 2)\n            return 'Accepted!';\n        else if(status == 3)\n            return 'Rejected :(';\n    }\n\n    changeRating( newRating , name ) {\n        const url = \"http://localhost:5000/applicants/updateratings/\" + name;\n        const requirements = {\n            token: localStorage.getItem('token'),\n            rating: newRating\n        };\n        axios.post(url , requirements)\n        .then(result => {\n            if(result.data == 1)\n            {\n                alert('Not Authorized!');\n                this.props.history.push('/login');\n            }\n            else if(result.data == 2)\n            {\n                alert('Already Rated');\n            }\n            else{\n                alert('Successful!');\n                window.location.reload(false);\n            }\n        })\n    }\n\n    onSort(sortby, sortin){\n        this.setState({loading: true});\n        this.setState({sorted_app: this.state.applications});\n        if(sortby === 'Rating')\n        {\n            if(sortin === \"asc\")\n            {\n                this.state.sorted_app.sort((a,b) =>  {\n                    if(this.getApplicantDetails(a.applicant).rating > this.getApplicantDetails(b.applicant).rating) {return 1} \n                    else if(this.getApplicantDetails(a.applicant).rating < this.getApplicantDetails(b.applicant).rating) {return -1}\n                    else return 0\n                }   \n                );\n            }\n\n            else if(sortin === \"des\")\n            {\n                this.state.sorted_app.sort((a,b) =>  {\n                    if(this.getApplicantDetails(a.applicant).rating > this.getApplicantDetails(b.applicant).rating) {return -1} \n                    else if(this.getApplicantDetails(a.applicant).rating < this.getApplicantDetails(b.applicant).rating) {return +1}\n                    else return 0\n                }   \n                );\n            }\n        }\n\n        if(sortby === 'Date')\n        {\n            if(sortin === \"asc\")\n            {\n                this.state.sorted_app.sort((a1,b1) =>  {\n                    const a = this.getJobDetails(a1.job).posting_date;\n                    const b = this.getJobDetails(b1.job).posting_date;\n                    if(this.formatDate(a.year , a.month , a.date) > this.formatDate(b.year , b.month , b.date)) {return 1} \n                    else if(this.formatDate(a.year , a.month , a.date) < this.formatDate(b.year , b.month , b.date)) {return -1}\n                    else return 0\n                }   \n                );\n            }\n\n            else if(sortin === \"des\")\n            {\n                this.state.sorted_app.sort((a1,b1) =>  {\n                    const a = this.getJobDetails(a1.job).posting_date;\n                    const b = this.getJobDetails(b1.job).posting_date;\n                    if(this.formatDate(a.year , a.month , a.date) > this.formatDate(b.year , b.month , b.date)) {return -1} \n                    else if(this.formatDate(a.year , a.month , a.date) < this.formatDate(b.year , b.month , b.date)) {return +1}\n                    else return 0\n                }   \n                );\n            }\n        }\n\n        if(sortby === 'Name')\n        {\n            if(sortin === \"asc\")\n            {\n                this.state.sorted_app.sort((a,b) =>  {\n                    if(this.getApplicantDetails(a.applicant).name.toLowerCase() > this.getApplicantDetails(b.applicant).name.toLowerCase()) {return 1} \n                    else if(this.getApplicantDetails(a.applicant).name.toLowerCase() < this.getApplicantDetails(b.applicant).name.toLowerCase()) {return -1}\n                    else return 0\n                }   \n                );\n            }\n\n            else if(sortin === \"des\")\n            {\n                this.state.sorted_app.sort((a,b) =>  {\n                    if(this.getApplicantDetails(a.applicant).name.toLowerCase() > this.getApplicantDetails(b.applicant).name.toLowerCase()) {return -1} \n                    else if(this.getApplicantDetails(a.applicant).name.toLowerCase() < this.getApplicantDetails(b.applicant).name.toLowerCase()) {return 1}\n                    else return 0\n                }   \n                );\n            }\n        }\n\n        if(sortby === 'Title')\n        {\n            if(sortin === \"asc\")\n            {\n                this.state.sorted_app.sort((a,b) =>  {\n                    if(this.getJobDetails(a.job).title.toLowerCase() > this.getJobDetails(b.job).title.toLowerCase()) {return 1} \n                    else if(this.getJobDetails(a.job).title.toLowerCase() < this.getJobDetails(b.job).title.toLowerCase()) {return -1}\n                    else return 0\n                }   \n                );\n            }\n\n            else if(sortin === \"des\")\n            {\n                this.state.sorted_app.sort((a,b) =>  {\n                    if(this.getJobDetails(a.job).title.toLowerCase() > this.getJobDetails(b.job).title.toLowerCase()) {return -1} \n                    else if(this.getJobDetails(a.job).title.toLowerCase() < this.getJobDetails(b.job).title.toLowerCase()) {return 1}\n                    else return 0\n                }   \n                );\n            }\n\n        }\n        this.setState({loading: false});\n        this.setState({clear_sorted: 0});\n    };\n\n    formatDate(day , month , year)\n    {\n        return new Date(year,month, day,0,0,0);\n    }\n\n    getJobDetails(jobid){\n        for(var i = 0 ; i < this.state.jobs.length ; i++)\n        {\n            console.log(jobid , this.state.jobs[i]._id);\n            if(jobid == this.state.jobs[i]._id)\n            {\n                const jobDetails = {\n                    posting_date: this.state.jobs[i].posting_date,\n                    title: this.state.jobs[i].title,\n                    type: this.state.jobs[i].type\n                }\n                return jobDetails;\n            }\n        }\n       \n    }\n\n    renderAppDetails(d) {\n        if(d.accept == 3)\n        {\n            return '';\n        }\n        const appl = this.getApplicantDetails(d.applicant);\n        const skill_render = appl.skills.map((d) => <li>{d}</li>);\n        const lang_render = appl.languages.map((d) => <li>{d}</li>);\n        const edu_render = appl.education.map((d) =>\n        <li>\n        {d.college} {'  '}\n        {d.start_year} {'  '}\n        {d.end_year}\n        </li>\n        );\n        const job_details = this.getJobDetails(d.job);\n        console.log(job_details);\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        return (\n        <table className=\"table table-bordered\">\n                    <tbody>\n                    <tr className=\"table-danger\">Name: {appl.name}</tr>\n                    <tr className=\"table-danger\">Email: {appl.email}</tr>\n                    <tr className=\"table-danger\">Date applied: {d.applied}</tr>\n                    <tr className=\"table-danger\">Type: {job_details.type} </tr>\n                    <tr className=\"table-danger\">Join Date: {job_details.posting_date.date} {monthNames[job_details.posting_date.month]}, {job_details.posting_date.year}</tr>\n                    <tr className=\"table-danger\">Title: {job_details.title} </tr>\n                    <StarRatings rating={this.getApplicantDetails(d.applicant).rating} starRatedColor=\"blue\" changeRating={this.changeRating} numberOfStars={5} name={this.getApplicantDetails(d.applicant).usrid}/>\n                    </tbody>\n        </table>\n        );\n    };\n\n    renderApps(){\n\n        if(this.state.loading || !this.state.applications)\n        {\n            return (\n                <div>Loading ...</div>\n            );\n            \n        }\n\n        else if(localStorage.getItem(\"type\") === 'Recruiter' && this.state.clear_sorted == 1)\n        {\n            const apps = this.state.applications.map((d) => \n            <div> {this.renderAppDetails(d)} </div>\n            );\n            return (\n                <div>{apps}</div>\n            );\n        }\n\n        else if(localStorage.getItem(\"type\") === 'Recruiter' && this.state.clear_sorted == 0)\n        {\n\n            const apps = this.state.sorted_app.map((d) => \n            <div> {this.renderAppDetails(d)} </div>\n            );\n            return (\n                <div>{apps}</div>\n            );\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                 <a className=\"btn btn-primary col px-md-5 p-3 border\" data-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                    Filter\n                </a>\n                <div className=\"flex-row collapse\" id=\"collapseExample\">\n                    <div className=\"d-flex flex-column p-4\">\n                        <div>\n                            <label>Sort by: {this.state.sortby}</label>\n                            <DropdownButton alignRight title=\"Sort by\" id=\"dropdown\" value={this.state.sortby} onSelect={this.onChangeSortBy} >\n                                <Dropdown.Item eventKey=\"Rating\">Rating</Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item eventKey=\"Name\">Name</Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item eventKey=\"Date\">Joining date</Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item eventKey=\"Title\">Job Title</Dropdown.Item>\n                            </DropdownButton>\n                        </div>\n                        <div>\n                            <label>Sort in: {this.state.sortin}</label>\n                            <DropdownButton alignRight title=\"Sort in\" id=\"dropdown\" value={this.state.sortin} onSelect={this.onChangeSortIn} >\n                                <Dropdown.Item eventKey=\"asc\">Ascending</Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item eventKey=\"des\">Descending</Dropdown.Item>\n                            </DropdownButton>\n                        </div>\n                        <div>\n                            <label>Sort by title</label>\n                        </div>\n                        <div className=\"p-2\">\n                            <Button size=\"sm\" variant=\"outline-primary\" onClick={() => this.onSort(this.state.sortby , this.state.sortin)}>Sort</Button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"p-4 align-self-center\">{this.renderApps()}</div>\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter(appViewJob);","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/intro.component.js",["237","238","239","240"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\n\nexport default class Intro extends Component {\n    constructor(props) {\n        super(props);\n      }\n      componentDidMount() {\n        localStorage.clear();\n        this.props.handler();\n      }\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>You or on introduction</h1>\n                <h4>LinkedIn Clone: DASS Assignment-1</h4>\n            </div>\n        );\n    }\n}","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/recruiter-registration.component.js",["241","242","243","244","245","246"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\n\nclass recruiterRegister extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangeBio = this.onChangeBio.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onChangePhone = this.onChangePhone.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeImage = this.onChangeImage.bind(this);\n\n        this.state = {\n\n            name: '',\n            email: '',\n            bio: '',\n            phone: '',\n            password: '',\n            imgencode: ''\n        }\n    }\n\n    onChangeName(e){\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    onChangeEmail(e){\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e){\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    onChangeBio(e){\n        this.setState({\n            bio: e.target.value\n        });\n    }\n\n    onChangePhone(e){\n        this.setState({\n            phone: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        \n        const recruiter = {\n            type: \"Recruiter\",\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            phone: this.state.phone,\n            bio: this.state.bio,\n            imgencode: this.state.imgencode\n        }\n        axios.post(\"http://localhost:5000/users/register\", recruiter).then(result => { \n            console.log(result.data); \n            if(result.data ==  1) {alert('Success'); this.props.history.push('/login'); }\n            else alert(result.data == 1);\n        })\n        .catch(error => console.log(error));\n        console.log(recruiter);\n\n    }\n\n    onChangeImage(e) {\n        let file = e.target.files[0];\n        if(file.size > 100000)\n        {\n            alert('Image size > 1 MB')\n            window.location.reload(false);\n        }\n        if(file) {\n            const reader = new FileReader();\n            reader.onload = this.handlerReaderLoaded.bind(this);\n            reader.readAsBinaryString(file);\n        }\n    }\n\n    handlerReaderLoaded(e) {\n        let binaryString = e.target.result;\n        this.setState({\n            imgencode: btoa(binaryString)\n        });\n        console.log(btoa(binaryString));\n    }\n\n    render(){\n        return (\n            <div>\n                <h3> Register Recruiter </h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Name: </label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.onChangeName} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Email: </label>\n                        <input type=\"email\" className=\"form-control\" value={this.state.email} onChange={this.onChangeEmail} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Phone: </label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.phone} onChange={this.onChangePhone} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Password: </label>\n                        <input type=\"password\" className=\"form-control\" value={this.state.password} onChange={this.onChangePassword} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Bio: </label>\n                        <input type=\"textbox\" className=\"form-control\" value={this.state.bio} onChange={this.onChangeBio} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <labe>Upload Profile Pic: </labe>\n                        <input type=\"file\" name=\"image\" id=\"file\" accept=\".jpeg , .png , .jpg\" onChange={this.onChangeImage} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Create Recruiter\" className=\"btn btn-primary\" />\n                    </div>\n\n                </form>\n            </div>\n        )\n    }\n\n};\n\nexport default withRouter(recruiterRegister);\n\n\n\n","/Users/karthik/Desktop/linkedin-clone/frontend/src/components/applicant-registration.component.js",["247","248","249","250","251","252","253","254","255","256","257","258","259"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router-dom\";\n\nclass applicantRegister extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onChangeLanguages = this.onChangeLanguages.bind(this);\n        this.onChangeRating = this.onChangeRating.bind(this);\n        this.onChangeEducation = this.onChangeEducation.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.skilladdClick = this.skilladdClick.bind(this);\n        this.skillhandleChange = this.skillhandleChange.bind(this);\n        this.skillremoveClick = this.skillremoveClick.bind(this);\n        this.skillcreateUI = this.skillcreateUI.bind(this);\n        this.languagecreateUI = this.languagecreateUI.bind(this);\n        this.languagehandleChange = this.languagehandleChange.bind(this);\n        this.languageremoveClick = this.languageremoveClick.bind(this);\n        this.languageaddClick = this.languageaddClick.bind(this);\n        this.educationaddClick = this.educationaddClick.bind(this);\n        this.educationcreateUI = this.educationcreateUI.bind(this);\n        this.educationhandleChange = this.educationhandleChange.bind(this);\n        this.educationremoveClick = this.educationremoveClick.bind(this);\n        this.onChangeImage = this.onChangeImage.bind(this);\n\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            rating: 0,\n            skills: [{skill: ''}],\n            languages: [{language: 'C'} , {language: 'C++'}],\n            education: [{college: \"\" , start_year: 0 , end_year: 0}],\n            selectedFile: null,\n            imgencode: ''\n        }\n    }\n    //Skills UI \n    skilladdClick(){\n        this.setState(prevState => ({ \n            skills: [...prevState.skills, '']\n        }))\n    }\n\n    skillhandleChange(i, e) {\n        const { name , value } = e.target;\n        let skills = [...this.state.skills];\n        skills[i] = {...skills[i], [name]: value}; \n        console.log(skills);\n        this.setState({ skills });\n    }\n\n    skillremoveClick(i){\n        let skills = [...this.state.skills];\n        skills.splice(i, 1);\n        this.setState({ skills });\n    }\n\n    skillcreateUI(){\n        return this.state.skills.map((el, i) => (\n          <div key={i} className=\"d-flex\">\n             <input placeholder=\"Skill\" name=\"skill\" className=\"form-control\" value={el.skill ||''} onChange={this.skillhandleChange.bind(this, i)} />\n             <input type='button' className=\"btn btn-secondary\" value='remove' onClick={this.skillremoveClick.bind(this, i)}/>\n          </div>          \n        ))\n    }\n\n    //Language UI\n    languageaddClick(){\n        this.setState(prevState => ({ \n            languages: [...prevState.languages, '']\n        }))\n    }\n\n    languagehandleChange(i, e) {\n        const { name, value } = e.target;\n        let languages = [...this.state.languages];\n        languages[i] = {...languages[i], [name]: value};\n        this.setState({ languages });\n    }\n\n    languageremoveClick(i){\n        let languages = [...this.state.languages];\n        languages.splice(i, 1);\n        this.setState({ languages });\n    }\n\n    languagecreateUI(){\n        return this.state.languages.map((el, i) => (\n          <div key={i} className=\"d-flex\">\n             <input placeholder=\"Language\" name=\"language\" className=\"form-control\" value={el.language ||''} onChange={this.languagehandleChange.bind(this, i)} />\n             <input type='button' className=\"btn btn-secondary\" value='remove' onClick={this.languageremoveClick.bind(this, i)}/>\n          </div>          \n        ))\n    }\n\n    //Education UI\n    educationaddClick(){\n        this.setState(prevState => ({ \n            education: [...prevState.education, {college: \"\" , start_year: 0 , end_year: 0}]\n        }))\n    }\n\n    educationhandleChange(i, e) {\n        const { name, value } = e.target;\n        let education = [...this.state.education];\n        console.log(name,value);\n        education[i] = {...education[i], [name]: value};\n        this.setState({ education });\n    }\n\n    educationremoveClick(i){\n        let education = [...this.state.education];\n        education.splice(i, 1);\n        this.setState({ education });\n    }\n\n    educationcreateUI(){\n        return this.state.education.map((el, i) => (\n          <div key={i} className=\"d-flex\">\n            Education {i}: \n            <input placeholder=\"College\" name=\"college\" className=\"form-control\" value={el.college ||''} onChange={this.educationhandleChange.bind(this, i)} />\n            <input placeholder=\"Start Year\" name=\"start_year\" className=\"form-control\" value={el.start_year || this.state.education.start_year} onChange={this.educationhandleChange.bind(this, i)} />\n            <input placeholder=\"End Year\" name=\"end_year\" className=\"form-control\" value={el.end_year || this.state.education.start_year} onChange={this.educationhandleChange.bind(this, i)} />\n            <input type='button' className=\"btn btn-secondary\" value='remove' onClick={this.educationremoveClick.bind(this, i)}/>\n          </div>          \n        ))\n    }\n\n    onChangeName(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n    onChangeEducation(e) {\n        this.setState({\n            education: e.target.value\n        });\n    }\n    onChangeLanguages(e) {\n        this.setState({\n            languages: e.target.value\n        });\n    }\n    onChangeRating(e) {\n        this.setState({\n            rating: e.target.value\n        });\n    }\n\n    async onUpload(e) {\n        console.log(e.target.files[0]);\n        await this.setState({\n            selectedFile: e.target.files[0]\n        })\n        const data = new FormData();\n        data.append('file', this.state.selectedFile);\n\n    }\n\n    onChangeImage(e) {\n        let file = e.target.files[0];\n        console.log(file.size);\n        if(file.size > 100000)\n        {\n            alert('Image size > 1 MB')\n            window.location.reload(false);\n        }\n\n        if(file) {\n            const reader = new FileReader();\n            reader.onload = this.handlerReaderLoaded.bind(this);\n            reader.readAsBinaryString(file);\n        }\n    }\n\n    handlerReaderLoaded(e) {\n        let binaryString = e.target.result;\n        this.setState({\n            imgencode: btoa(binaryString)\n        });\n        console.log(btoa(binaryString));\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const len = this.state.education.length;\n        if(len != 0)\n        {\n            for(var i = 0 ; i < len ; i++)\n            {\n                this.state.education[i].start_year = this.state.education[i].start_year;\n                this.state.education[i].end_year =  this.state.education[i].end_year;\n            }\n        }\n\n        const skill_len = this.state.skills.length;\n        var skill = [];\n        if(skill_len != 0)\n        {\n            for(var i = 0 ; i < skill_len ; i++)\n            {\n                skill.push(this.state.skills[i].skill);\n            }\n        }\n        var lang = [];\n        const lang_len = this.state.languages.length;\n        if(lang_len != 0)\n        {\n            for(var i = 0 ; i < lang_len ; i++)\n            {\n                console.log('In');\n                lang.push(this.state.languages[i].language);\n            }\n        }\n        const data = new FormData();\n        data.append('file', this.state.selectedFile);\n        var applicant = {};\n        if(this.state.selectedFile){\n            applicant = {\n                type: \"Applicant\",\n                name: this.state.name,\n                email: this.state.email,\n                password: this.state.password,\n                skills: skill,\n                languages: lang,\n                rating: this.state.rating,\n                education: this.state.education,\n                resume: 1,\n                imgencode: this.state.imgencode\n            }\n        }\n        else{\n            applicant = {\n                type: \"Applicant\",\n                name: this.state.name,\n                email: this.state.email,\n                password: this.state.password,\n                skills: skill,\n                languages: lang,\n                rating: this.state.rating,\n                education: this.state.education,\n                imgencode: this.state.imgencode\n            }\n        }\n        console.log(applicant);\n        axios.post(\"http://localhost:5000/users/register\", applicant).then(result => { \n            if(result.data == 2) \n            {\n                alert('Enter date fields properly')\n            }\n            else if(result.data == 1) \n            {\n                alert('Enter Education fields properly');\n            }\n            else if(result.data == 0) \n            {\n                alert('Enter all the fields')\n            }\n            else{\n                \n                alert('Successful'); \n                const applicantid = result.data.usrid;\n                if(this.state.selectedFile){\n                    const url1 = \"http://localhost:5000/users/uploadresume/\" + applicantid;\n                    if(data){\n                        axios.post(url1 , data)\n                        .then(res => {\n                            console.log(res.statusText);\n                        })\n                        .catch(error => console.log(error));\n                    }\n                }\n                this.props.history.push('/login');\n                \n            }\n        })\n        .catch(error => console.log(error));\n        console.log(applicant);\n        \n    }\n    render() {\n        return (\n            <div>\n      <h3>Create applicant</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label>Name: </label>\n          <input \n              type=\"text\" \n              className=\"form-control\"\n              value={this.state.name}\n              onChange={this.onChangeName}\n              />\n        </div>\n\n        <div className=\"form-group\"> \n          <label>Email: </label>\n          <input  type=\"email\"\n              required\n              className=\"form-control\"\n              value={this.state.email}\n              onChange={this.onChangeEmail}\n              />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Password: </label>\n          <input \n              type=\"password\" \n              className=\"form-control\"\n              value={this.state.password}\n              onChange={this.onChangePassword}\n              />\n        </div>\n\n        {this.skillcreateUI()}\n        <input type='button' value='add' className=\"btn btn-secondary pull-right\" onClick={this.skilladdClick.bind(this)}/>\n        <br />\n        <br />\n        {this.languagecreateUI()}\n        <input type='button' value='add' className=\"btn btn-secondary pull-right\" onClick={this.languageaddClick.bind(this)}/>\n        <br />\n        <br />\n        {this.educationcreateUI()}\n        <input type='button' value='add' className=\"btn btn-secondary pull-right\" onClick={this.educationaddClick.bind(this)}/>\n        <br />\n        <br />\n        <br />\n        <div className=\"form-group\">\n            <label>Upload Resume: </label>\n            <input type=\"file\" className=\"hidden\" multiple={false} accept=\".pdf\" onChange={evt => this.onUpload(evt)} />\n        </div>\n        <br />\n        <br />\n\n        <div className=\"form-group\">\n            <labe>Upload Profile Pic: </labe>\n            <input type=\"file\" name=\"image\" id=\"file\" accept=\".jpeg , .png , .jpg\" onChange={this.onChangeImage} />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Create Applicant\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n        )\n    }\n}\n\nexport default withRouter(applicantRegister);",["260","261"],"/Users/karthik/Desktop/linkedin-clone/frontend/src/components/auth.js",[],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":4,"column":10,"nodeType":"268","messageId":"269","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"267","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"266","severity":1,"message":"270","line":6,"column":8,"nodeType":"268","messageId":"269","endLine":6,"endColumn":12},{"ruleId":"266","severity":1,"message":"271","line":48,"column":19,"nodeType":"268","messageId":"269","endLine":48,"endColumn":25},{"ruleId":"266","severity":1,"message":"272","line":1,"column":8,"nodeType":"268","messageId":"269","endLine":1,"endColumn":13},{"ruleId":"266","severity":1,"message":"267","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":7,"column":5,"nodeType":"275","messageId":"276","endLine":9,"endColumn":6},{"ruleId":"277","severity":1,"message":"278","line":78,"column":64,"nodeType":"279","messageId":"280","endLine":78,"endColumn":66},{"ruleId":"266","severity":1,"message":"267","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"266","severity":1,"message":"281","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":17},{"ruleId":"266","severity":1,"message":"282","line":7,"column":8,"nodeType":"268","messageId":"269","endLine":7,"endColumn":19},{"ruleId":"266","severity":1,"message":"283","line":9,"column":8,"nodeType":"268","messageId":"269","endLine":9,"endColumn":22},{"ruleId":"266","severity":1,"message":"284","line":10,"column":8,"nodeType":"268","messageId":"269","endLine":10,"endColumn":16},{"ruleId":"285","severity":1,"message":"286","line":124,"column":26,"nodeType":"287","endLine":124,"endColumn":77},{"ruleId":"266","severity":1,"message":"267","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"266","severity":1,"message":"288","line":149,"column":15,"nodeType":"268","messageId":"269","endLine":149,"endColumn":25},{"ruleId":"277","severity":1,"message":"289","line":162,"column":22,"nodeType":"279","messageId":"280","endLine":162,"endColumn":24},{"ruleId":"277","severity":1,"message":"278","line":191,"column":28,"nodeType":"279","messageId":"280","endLine":191,"endColumn":30},{"ruleId":"290","severity":1,"message":"291","line":259,"column":147,"nodeType":"292","endLine":259,"endColumn":178},{"ruleId":"266","severity":1,"message":"267","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"266","severity":1,"message":"282","line":7,"column":8,"nodeType":"268","messageId":"269","endLine":7,"endColumn":19},{"ruleId":"277","severity":1,"message":"278","line":83,"column":46,"nodeType":"279","messageId":"280","endLine":83,"endColumn":48},{"ruleId":"277","severity":1,"message":"278","line":141,"column":43,"nodeType":"279","messageId":"280","endLine":141,"endColumn":45},{"ruleId":"277","severity":1,"message":"289","line":207,"column":16,"nodeType":"279","messageId":"280","endLine":207,"endColumn":18},{"ruleId":"277","severity":1,"message":"278","line":237,"column":28,"nodeType":"279","messageId":"280","endLine":237,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":273,"column":28,"nodeType":"279","messageId":"280","endLine":273,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":278,"column":33,"nodeType":"279","messageId":"280","endLine":278,"endColumn":35},{"ruleId":"277","severity":1,"message":"289","line":292,"column":16,"nodeType":"279","messageId":"280","endLine":292,"endColumn":18},{"ruleId":"277","severity":1,"message":"278","line":304,"column":21,"nodeType":"279","messageId":"280","endLine":304,"endColumn":23},{"ruleId":"277","severity":1,"message":"278","line":315,"column":21,"nodeType":"279","messageId":"280","endLine":315,"endColumn":23},{"ruleId":"277","severity":1,"message":"278","line":347,"column":84,"nodeType":"279","messageId":"280","endLine":347,"endColumn":86},{"ruleId":"277","severity":1,"message":"278","line":372,"column":97,"nodeType":"279","messageId":"280","endLine":372,"endColumn":99},{"ruleId":"277","severity":1,"message":"289","line":393,"column":43,"nodeType":"279","messageId":"280","endLine":393,"endColumn":45},{"ruleId":"277","severity":1,"message":"278","line":406,"column":135,"nodeType":"279","messageId":"280","endLine":406,"endColumn":137},{"ruleId":"277","severity":1,"message":"278","line":409,"column":43,"nodeType":"279","messageId":"280","endLine":409,"endColumn":45},{"ruleId":"277","severity":1,"message":"278","line":504,"column":96,"nodeType":"279","messageId":"280","endLine":504,"endColumn":98},{"ruleId":"277","severity":1,"message":"278","line":504,"column":126,"nodeType":"279","messageId":"280","endLine":504,"endColumn":128},{"ruleId":"277","severity":1,"message":"278","line":507,"column":30,"nodeType":"279","messageId":"280","endLine":507,"endColumn":32},{"ruleId":"277","severity":1,"message":"278","line":507,"column":45,"nodeType":"279","messageId":"280","endLine":507,"endColumn":47},{"ruleId":"277","severity":1,"message":"289","line":514,"column":97,"nodeType":"279","messageId":"280","endLine":514,"endColumn":99},{"ruleId":"277","severity":1,"message":"278","line":514,"column":127,"nodeType":"279","messageId":"280","endLine":514,"endColumn":129},{"ruleId":"277","severity":1,"message":"278","line":517,"column":30,"nodeType":"279","messageId":"280","endLine":517,"endColumn":32},{"ruleId":"277","severity":1,"message":"278","line":517,"column":45,"nodeType":"279","messageId":"280","endLine":517,"endColumn":47},{"ruleId":"277","severity":1,"message":"278","line":524,"column":97,"nodeType":"279","messageId":"280","endLine":524,"endColumn":99},{"ruleId":"277","severity":1,"message":"278","line":524,"column":127,"nodeType":"279","messageId":"280","endLine":524,"endColumn":129},{"ruleId":"277","severity":1,"message":"278","line":528,"column":29,"nodeType":"279","messageId":"280","endLine":528,"endColumn":31},{"ruleId":"277","severity":1,"message":"278","line":528,"column":44,"nodeType":"279","messageId":"280","endLine":528,"endColumn":46},{"ruleId":"277","severity":1,"message":"289","line":535,"column":97,"nodeType":"279","messageId":"280","endLine":535,"endColumn":99},{"ruleId":"277","severity":1,"message":"278","line":535,"column":127,"nodeType":"279","messageId":"280","endLine":535,"endColumn":129},{"ruleId":"277","severity":1,"message":"278","line":538,"column":29,"nodeType":"279","messageId":"280","endLine":538,"endColumn":31},{"ruleId":"277","severity":1,"message":"278","line":538,"column":44,"nodeType":"279","messageId":"280","endLine":538,"endColumn":46},{"ruleId":"266","severity":1,"message":"267","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"266","severity":1,"message":"281","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"266","severity":1,"message":"293","line":7,"column":8,"nodeType":"268","messageId":"269","endLine":7,"endColumn":23},{"ruleId":"277","severity":1,"message":"278","line":58,"column":42,"nodeType":"279","messageId":"280","endLine":58,"endColumn":44},{"ruleId":"277","severity":1,"message":"289","line":66,"column":32,"nodeType":"279","messageId":"280","endLine":66,"endColumn":34},{"ruleId":"277","severity":1,"message":"278","line":77,"column":45,"nodeType":"279","messageId":"280","endLine":77,"endColumn":47},{"ruleId":"277","severity":1,"message":"289","line":100,"column":16,"nodeType":"279","messageId":"280","endLine":100,"endColumn":18},{"ruleId":"277","severity":1,"message":"289","line":115,"column":16,"nodeType":"279","messageId":"280","endLine":115,"endColumn":18},{"ruleId":"277","severity":1,"message":"278","line":141,"column":28,"nodeType":"279","messageId":"280","endLine":141,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":146,"column":33,"nodeType":"279","messageId":"280","endLine":146,"endColumn":35},{"ruleId":"277","severity":1,"message":"289","line":160,"column":16,"nodeType":"279","messageId":"280","endLine":160,"endColumn":18},{"ruleId":"277","severity":1,"message":"278","line":182,"column":19,"nodeType":"279","messageId":"280","endLine":182,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":184,"column":24,"nodeType":"279","messageId":"280","endLine":184,"endColumn":26},{"ruleId":"277","severity":1,"message":"278","line":186,"column":24,"nodeType":"279","messageId":"280","endLine":186,"endColumn":26},{"ruleId":"277","severity":1,"message":"278","line":188,"column":24,"nodeType":"279","messageId":"280","endLine":188,"endColumn":26},{"ruleId":"277","severity":1,"message":"289","line":193,"column":21,"nodeType":"279","messageId":"280","endLine":193,"endColumn":23},{"ruleId":"266","severity":1,"message":"267","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"266","severity":1,"message":"294","line":6,"column":7,"nodeType":"268","messageId":"269","endLine":6,"endColumn":10},{"ruleId":"277","severity":1,"message":"278","line":76,"column":28,"nodeType":"279","messageId":"280","endLine":76,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":81,"column":33,"nodeType":"279","messageId":"280","endLine":81,"endColumn":35},{"ruleId":"277","severity":1,"message":"278","line":86,"column":33,"nodeType":"279","messageId":"280","endLine":86,"endColumn":35},{"ruleId":"277","severity":1,"message":"278","line":91,"column":33,"nodeType":"279","messageId":"280","endLine":91,"endColumn":35},{"ruleId":"266","severity":1,"message":"267","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"266","severity":1,"message":"282","line":7,"column":8,"nodeType":"268","messageId":"269","endLine":7,"endColumn":19},{"ruleId":"277","severity":1,"message":"278","line":68,"column":29,"nodeType":"279","messageId":"280","endLine":68,"endColumn":31},{"ruleId":"277","severity":1,"message":"278","line":104,"column":28,"nodeType":"279","messageId":"280","endLine":104,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":128,"column":28,"nodeType":"279","messageId":"280","endLine":128,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":129,"column":28,"nodeType":"279","messageId":"280","endLine":129,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":147,"column":28,"nodeType":"279","messageId":"280","endLine":147,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":159,"column":21,"nodeType":"279","messageId":"280","endLine":159,"endColumn":23},{"ruleId":"277","severity":1,"message":"278","line":169,"column":21,"nodeType":"279","messageId":"280","endLine":169,"endColumn":23},{"ruleId":"277","severity":1,"message":"278","line":179,"column":21,"nodeType":"279","messageId":"280","endLine":179,"endColumn":23},{"ruleId":"277","severity":1,"message":"289","line":217,"column":16,"nodeType":"279","messageId":"280","endLine":217,"endColumn":18},{"ruleId":"277","severity":1,"message":"289","line":240,"column":16,"nodeType":"279","messageId":"280","endLine":240,"endColumn":18},{"ruleId":"277","severity":1,"message":"278","line":261,"column":19,"nodeType":"279","messageId":"280","endLine":261,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":263,"column":24,"nodeType":"279","messageId":"280","endLine":263,"endColumn":26},{"ruleId":"277","severity":1,"message":"278","line":265,"column":24,"nodeType":"279","messageId":"280","endLine":265,"endColumn":26},{"ruleId":"277","severity":1,"message":"278","line":267,"column":24,"nodeType":"279","messageId":"280","endLine":267,"endColumn":26},{"ruleId":"277","severity":1,"message":"278","line":279,"column":28,"nodeType":"279","messageId":"280","endLine":279,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":284,"column":33,"nodeType":"279","messageId":"280","endLine":284,"endColumn":35},{"ruleId":"277","severity":1,"message":"278","line":374,"column":61,"nodeType":"279","messageId":"280","endLine":374,"endColumn":63},{"ruleId":"277","severity":1,"message":"278","line":384,"column":21,"nodeType":"279","messageId":"280","endLine":384,"endColumn":23},{"ruleId":"277","severity":1,"message":"278","line":428,"column":89,"nodeType":"279","messageId":"280","endLine":428,"endColumn":91},{"ruleId":"277","severity":1,"message":"278","line":439,"column":89,"nodeType":"279","messageId":"280","endLine":439,"endColumn":91},{"ruleId":"266","severity":1,"message":"295","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":16},{"ruleId":"266","severity":1,"message":"296","line":3,"column":18,"nodeType":"268","messageId":"269","endLine":3,"endColumn":23},{"ruleId":"266","severity":1,"message":"267","line":3,"column":25,"nodeType":"268","messageId":"269","endLine":3,"endColumn":29},{"ruleId":"266","severity":1,"message":"297","line":3,"column":31,"nodeType":"268","messageId":"269","endLine":3,"endColumn":39},{"ruleId":"277","severity":1,"message":"278","line":114,"column":28,"nodeType":"279","messageId":"280","endLine":114,"endColumn":30},{"ruleId":"266","severity":1,"message":"267","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"277","severity":1,"message":"289","line":71,"column":25,"nodeType":"279","messageId":"280","endLine":71,"endColumn":27},{"ruleId":"277","severity":1,"message":"289","line":80,"column":25,"nodeType":"279","messageId":"280","endLine":80,"endColumn":27},{"ruleId":"298","severity":1,"message":"299","line":81,"column":29,"nodeType":"268","messageId":"300","endLine":81,"endColumn":30},{"ruleId":"277","severity":1,"message":"289","line":224,"column":16,"nodeType":"279","messageId":"280","endLine":224,"endColumn":18},{"ruleId":"301","severity":1,"message":"302","line":228,"column":17,"nodeType":"303","endLine":228,"endColumn":40},{"ruleId":"304","severity":1,"message":"305","line":228,"column":54,"nodeType":"303","messageId":"306","endLine":228,"endColumn":88},{"ruleId":"301","severity":1,"message":"302","line":229,"column":17,"nodeType":"303","endLine":229,"endColumn":40},{"ruleId":"304","severity":1,"message":"307","line":229,"column":53,"nodeType":"303","messageId":"306","endLine":229,"endColumn":85},{"ruleId":"277","severity":1,"message":"289","line":235,"column":22,"nodeType":"279","messageId":"280","endLine":235,"endColumn":24},{"ruleId":"298","severity":1,"message":"299","line":237,"column":21,"nodeType":"268","messageId":"300","endLine":237,"endColumn":22},{"ruleId":"277","severity":1,"message":"289","line":244,"column":21,"nodeType":"279","messageId":"280","endLine":244,"endColumn":23},{"ruleId":"298","severity":1,"message":"299","line":246,"column":21,"nodeType":"268","messageId":"300","endLine":246,"endColumn":22},{"ruleId":"277","severity":1,"message":"278","line":268,"column":28,"nodeType":"279","messageId":"280","endLine":268,"endColumn":30},{"ruleId":"266","severity":1,"message":"267","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"266","severity":1,"message":"281","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":17},{"ruleId":"277","severity":1,"message":"278","line":54,"column":29,"nodeType":"279","messageId":"280","endLine":54,"endColumn":31},{"ruleId":"277","severity":1,"message":"278","line":54,"column":50,"nodeType":"279","messageId":"280","endLine":54,"endColumn":52},{"ruleId":"277","severity":1,"message":"289","line":100,"column":16,"nodeType":"279","messageId":"280","endLine":100,"endColumn":18},{"ruleId":"277","severity":1,"message":"289","line":122,"column":16,"nodeType":"279","messageId":"280","endLine":122,"endColumn":18},{"ruleId":"277","severity":1,"message":"278","line":143,"column":19,"nodeType":"279","messageId":"280","endLine":143,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":145,"column":24,"nodeType":"279","messageId":"280","endLine":145,"endColumn":26},{"ruleId":"277","severity":1,"message":"278","line":147,"column":24,"nodeType":"279","messageId":"280","endLine":147,"endColumn":26},{"ruleId":"277","severity":1,"message":"278","line":149,"column":24,"nodeType":"279","messageId":"280","endLine":149,"endColumn":26},{"ruleId":"277","severity":1,"message":"278","line":161,"column":28,"nodeType":"279","messageId":"280","endLine":161,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":166,"column":33,"nodeType":"279","messageId":"280","endLine":166,"endColumn":35},{"ruleId":"277","severity":1,"message":"278","line":289,"column":22,"nodeType":"279","messageId":"280","endLine":289,"endColumn":24},{"ruleId":"277","severity":1,"message":"278","line":303,"column":21,"nodeType":"279","messageId":"280","endLine":303,"endColumn":23},{"ruleId":"266","severity":1,"message":"308","line":308,"column":15,"nodeType":"268","messageId":"269","endLine":308,"endColumn":27},{"ruleId":"266","severity":1,"message":"309","line":309,"column":15,"nodeType":"268","messageId":"269","endLine":309,"endColumn":26},{"ruleId":"266","severity":1,"message":"310","line":310,"column":15,"nodeType":"268","messageId":"269","endLine":310,"endColumn":25},{"ruleId":"277","severity":1,"message":"278","line":345,"column":89,"nodeType":"279","messageId":"280","endLine":345,"endColumn":91},{"ruleId":"277","severity":1,"message":"278","line":355,"column":89,"nodeType":"279","messageId":"280","endLine":355,"endColumn":91},{"ruleId":"266","severity":1,"message":"295","line":2,"column":27,"nodeType":"268","messageId":"269","endLine":2,"endColumn":33},{"ruleId":"266","severity":1,"message":"296","line":2,"column":35,"nodeType":"268","messageId":"269","endLine":2,"endColumn":40},{"ruleId":"266","severity":1,"message":"267","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":6,"column":5,"nodeType":"275","messageId":"276","endLine":8,"endColumn":8},{"ruleId":"266","severity":1,"message":"295","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":16},{"ruleId":"266","severity":1,"message":"296","line":3,"column":18,"nodeType":"268","messageId":"269","endLine":3,"endColumn":23},{"ruleId":"266","severity":1,"message":"267","line":3,"column":25,"nodeType":"268","messageId":"269","endLine":3,"endColumn":29},{"ruleId":"266","severity":1,"message":"297","line":3,"column":31,"nodeType":"268","messageId":"269","endLine":3,"endColumn":39},{"ruleId":"277","severity":1,"message":"278","line":73,"column":28,"nodeType":"279","messageId":"280","endLine":73,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":74,"column":36,"nodeType":"279","messageId":"280","endLine":74,"endColumn":38},{"ruleId":"266","severity":1,"message":"267","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"277","severity":1,"message":"289","line":203,"column":16,"nodeType":"279","messageId":"280","endLine":203,"endColumn":18},{"ruleId":"301","severity":1,"message":"302","line":207,"column":17,"nodeType":"303","endLine":207,"endColumn":40},{"ruleId":"304","severity":1,"message":"305","line":207,"column":54,"nodeType":"303","messageId":"306","endLine":207,"endColumn":88},{"ruleId":"301","severity":1,"message":"302","line":208,"column":17,"nodeType":"303","endLine":208,"endColumn":40},{"ruleId":"304","severity":1,"message":"307","line":208,"column":53,"nodeType":"303","messageId":"306","endLine":208,"endColumn":85},{"ruleId":"277","severity":1,"message":"289","line":214,"column":22,"nodeType":"279","messageId":"280","endLine":214,"endColumn":24},{"ruleId":"298","severity":1,"message":"299","line":216,"column":21,"nodeType":"268","messageId":"300","endLine":216,"endColumn":22},{"ruleId":"277","severity":1,"message":"289","line":223,"column":21,"nodeType":"279","messageId":"280","endLine":223,"endColumn":23},{"ruleId":"298","severity":1,"message":"299","line":225,"column":21,"nodeType":"268","messageId":"300","endLine":225,"endColumn":22},{"ruleId":"277","severity":1,"message":"278","line":263,"column":28,"nodeType":"279","messageId":"280","endLine":263,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":267,"column":33,"nodeType":"279","messageId":"280","endLine":267,"endColumn":35},{"ruleId":"277","severity":1,"message":"278","line":271,"column":33,"nodeType":"279","messageId":"280","endLine":271,"endColumn":35},{"ruleId":"262","replacedBy":"311"},{"ruleId":"264","replacedBy":"312"},"no-native-reassign",["313"],"no-negated-in-lhs",["314"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Auth' is defined but never used.","'tokens' is assigned a value but never used.","'axios' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Container' is defined but never used.","'StarRatings' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'monthNames' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'jobaddComponent' is defined but never used.","'jwt' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-self-assign","'this.state.education[i].start_year' is assigned to itself.","selfAssignment","'this.state.education[i].end_year' is assigned to itself.","'skill_render' is assigned a value but never used.","'lang_render' is assigned a value but never used.","'edu_render' is assigned a value but never used.",["313"],["314"],"no-global-assign","no-unsafe-negation"]