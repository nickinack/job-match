{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/karthik/Desktop/linkedin-clone/frontend/src/components/applicationview.component.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from \"react-router-dom\";\nimport jobaddComponent from './jobadd.component';\nimport StarRatings from 'react-star-ratings';\n\nclass viewApplication extends Component {\n  constructor(props) {\n    super(props);\n    this.componentWillMount = this.componentWillMount.bind(this);\n    this.renderUser = this.renderUser.bind(this);\n    this.getRecruiterDetails = this.getRecruiterDetails.bind(this);\n    this.getJobDetails = this.getJobDetails.bind(this);\n    this.state = {\n      applications: {},\n      jobs: {},\n      recruiters: {},\n      applicant: '',\n      loading: true,\n      users: {}\n    };\n  }\n\n  componentWillMount() {\n    const User = {\n      token: localStorage.getItem('token'),\n      type: localStorage.getItem('type')\n    };\n    const tokenVerify = {\n      token: localStorage.getItem('token')\n    };\n\n    if (User.type !== 'Applicant' || !User.token) {\n      alert('Not Permitted');\n      this.props.history.push('/login');\n    }\n\n    axios.post(\"http://localhost:5000/users/decode\", tokenVerify).then(res => {\n      if (!res.data.id) {\n        alert('Not permitted');\n        this.props.history.push('/login');\n      } else {\n        this.setState({\n          applicant: res.data.id\n        });\n        const url = \"http://localhost:5000/applicants/applications/\" + res.data.id;\n        axios.post(url, tokenVerify).then(applications => {\n          if (applications.data == 1) {\n            alert('Not Permitted');\n            this.props.history.push('login');\n          } else {\n            this.setState({\n              applications: applications.data\n            });\n            var jobsids = [];\n            const len = applications.data.length;\n\n            if (len != 0) {\n              for (var i = 0; i < len; i++) {\n                jobsids.push(applications.data[i].job);\n              }\n\n              const viewSome = {\n                token: localStorage.getItem(\"token\"),\n                jobarr: jobsids\n              };\n              axios.post(\"http://localhost:5000/jobs/viewsome\", viewSome).then(results => {\n                if (res.data == 1) {\n                  alert('Not Permitted');\n                  this.props.history.push('login');\n                } else {\n                  this.setState({\n                    jobs: results.data.jobs\n                  });\n                  this.setState({\n                    recruiters: results.data.recruiters\n                  });\n                  this.setState({\n                    users: results.data.users\n                  });\n                  this.setState({\n                    loading: false\n                  });\n                }\n              }).catch(error => console.log(error));\n            }\n          }\n        }).catch(error => console.log(error));\n      }\n    }).catch(error => console.log(error));\n  }\n\n  getRecruiterDetails(recid) {\n    const len = this.state.recruiters.length;\n\n    if (len != 0) {\n      for (var i = 0; i < len; i++) {\n        if (recid === this.state.recruiters[i].usrid) {\n          const recDetails = {\n            phone: this.state.recruiters[i].phone,\n            bio: this.state.recruiters[i].bio\n          };\n          return recDetails;\n        }\n      }\n    }\n  }\n\n  changeRating(newRating, name) {\n    const url = \"http://localhost:5000/jobs/updateratings/\" + name;\n    const requirements = {\n      token: localStorage.getItem('token'),\n      rating: newRating\n    };\n    axios.post(url, requirements).then(result => {\n      if (result.data == 1) {\n        alert('Not Authorized!');\n        this.props.history.push('/login');\n      } else if (result.data == 2) {\n        alert('Already Rated');\n      } else {\n        alert('Successful!');\n        window.location.reload(false);\n      }\n    });\n  }\n\n  getJobDetails(jobid) {\n    const len = this.state.jobs.length;\n\n    if (len != 0) {\n      for (var i = 0; i < len; i++) {\n        if (jobid === this.state.jobs[i]._id) {\n          const jobDetails = {\n            recruiter: this.getRecruiterDetails(this.state.jobs[i].recruiter),\n            title: this.state.jobs[i].title,\n            rating: this.state.jobs[i].rating,\n            id: this.state.jobs[i]._id,\n            posting_date: this.state.jobs[i].posting_date\n          };\n          return jobDetails;\n        }\n      }\n    }\n  }\n\n  getStatus(status) {\n    if (status == 0) return 'Submitted!';else if (status == 1) return 'Shortlisted!';else if (status == 2) return 'Accepted!';else if (status == 3) return 'Rejected :(';\n  }\n\n  renderJoinDate(d) {\n    if (d.accept != 2) {\n      return \"Not Available\";\n    } else {\n      const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      console.log(this.getJobDetails(d.job).posting_date);\n      return this.getJobDetails(d.job).posting_date.date + \"  \" + monthNames[this.getJobDetails(d.job).posting_date.month] + \", \" + this.getJobDetails(d.job).posting_date.year;\n    }\n  }\n\n  renderUser() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this);\n    } else {\n      console.log(this.state.applications);\n      const job = this.state.applications.map(d => /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"table-danger\",\n            children: [\"Phone Number of Recruiter: \", this.getJobDetails(d.job).recruiter.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"table-danger\",\n            children: [\"Recruiter Bio : \", this.getJobDetails(d.job).recruiter.bio]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"table-danger\",\n            children: [\"Title: \", this.getJobDetails(d.job).title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"table-danger\",\n            children: [\"Your SOP: \", d.sop]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"table-danger\",\n            children: [\"Joining date: \", this.renderJoinDate(d)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"table-danger\",\n            children: [\"Status: \", this.getStatus(d.accept)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(StarRatings, {\n            rating: this.getJobDetails(d.job).rating,\n            starRatedColor: \"blue\",\n            changeRating: this.changeRating,\n            numberOfStars: 5,\n            name: this.getJobDetails(d.job).id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this));\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"View Applications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: job\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderUser()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default withRouter(viewApplication);","map":{"version":3,"sources":["/Users/karthik/Desktop/linkedin-clone/frontend/src/components/applicationview.component.js"],"names":["axios","React","Component","Link","Container","withRouter","jobaddComponent","StarRatings","viewApplication","constructor","props","componentWillMount","bind","renderUser","getRecruiterDetails","getJobDetails","state","applications","jobs","recruiters","applicant","loading","users","User","token","localStorage","getItem","type","tokenVerify","alert","history","push","post","then","res","data","id","setState","url","jobsids","len","length","i","job","viewSome","jobarr","results","catch","error","console","log","recid","usrid","recDetails","phone","bio","changeRating","newRating","name","requirements","rating","result","window","location","reload","jobid","_id","jobDetails","recruiter","title","posting_date","getStatus","status","renderJoinDate","d","accept","monthNames","date","month","year","map","sop","render"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from \"react-router-dom\";\nimport jobaddComponent from './jobadd.component';\nimport StarRatings from 'react-star-ratings';\n\n\nclass viewApplication extends Component {\n    constructor(props) {\n        super(props);\n        this.componentWillMount = this.componentWillMount.bind(this);\n        this.renderUser = this.renderUser.bind(this);\n        this.getRecruiterDetails = this.getRecruiterDetails.bind(this);\n        this.getJobDetails = this.getJobDetails.bind(this);\n        this.state = {\n            applications: {},\n            jobs: {},\n            recruiters: {},\n            applicant: '',\n            loading: true,\n            users: {}\n        }\n    }\n\n\n    componentWillMount() {\n\n        const User = {\n            token: localStorage.getItem('token'),\n            type: localStorage.getItem('type')\n        }\n\n        const tokenVerify = {\n            token: localStorage.getItem('token')\n        }\n\n        if(User.type !== 'Applicant' || !User.token)\n        {\n            alert('Not Permitted');\n            this.props.history.push('/login');\n        }\n\n        axios.post(\"http://localhost:5000/users/decode\" , tokenVerify)\n        .then(res => {\n            if(!res.data.id) {\n                alert('Not permitted');\n                this.props.history.push('/login');\n            }\n\n            else {\n                this.setState({applicant: res.data.id});\n                const url = \"http://localhost:5000/applicants/applications/\" + res.data.id;\n                axios.post(url , tokenVerify)\n                .then(applications => {\n                    if(applications.data == 1) {\n                        alert('Not Permitted');\n                        this.props.history.push('login');\n                    }\n                    else {\n                        this.setState({applications: applications.data});\n                        var jobsids = [];\n                        const len = applications.data.length;\n                        if(len != 0) {\n                            for(var i = 0 ; i < len ; i++)\n                            {\n                                jobsids.push(applications.data[i].job);\n                            }\n                            const viewSome = {\n                                token: localStorage.getItem(\"token\"),\n                                jobarr: jobsids\n                            }\n                            axios.post(\"http://localhost:5000/jobs/viewsome\" , viewSome)\n                            .then(results => {\n                                if(res.data == 1) {\n                                    alert('Not Permitted');\n                                    this.props.history.push('login');\n                                }\n                                else {\n                                this.setState({jobs: results.data.jobs});\n                                this.setState({recruiters: results.data.recruiters});\n                                this.setState({users: results.data.users});\n                                this.setState({loading: false});\n                                }\n                            })\n                            .catch((error) => console.log(error));\n                        } \n                    }\n                })\n                .catch((error) => console.log(error));\n            }\n        })\n        .catch((error) => console.log(error));\n    }\n\n    getRecruiterDetails(recid) {\n        \n        const len = this.state.recruiters.length;\n        if(len != 0)\n        {\n            for(var i = 0 ; i < len ; i++)\n            {\n                if(recid === this.state.recruiters[i].usrid)\n                {\n                    const recDetails = {\n                        phone: this.state.recruiters[i].phone,\n                        bio: this.state.recruiters[i].bio\n                    }\n                    return recDetails;\n                }\n            }\n        }\n    }\n\n    changeRating( newRating, name ) {\n        const url = \"http://localhost:5000/jobs/updateratings/\" + name;\n        const requirements = {\n            token: localStorage.getItem('token'),\n            rating: newRating\n        };\n        axios.post(url , requirements)\n        .then(result => {\n            if(result.data == 1)\n            {\n                alert('Not Authorized!');\n                this.props.history.push('/login');\n            }\n            else if(result.data == 2)\n            {\n                alert('Already Rated');\n            }\n            else{\n                alert('Successful!');\n                window.location.reload(false);\n            }\n        })\n    }\n\n    getJobDetails(jobid) {\n\n        const len = this.state.jobs.length;\n        if(len != 0)\n        {\n            for(var i = 0 ; i < len ; i++)\n            {\n                if(jobid === this.state.jobs[i]._id)\n                {\n                    const jobDetails = {\n                        recruiter: this.getRecruiterDetails(this.state.jobs[i].recruiter),\n                        title: this.state.jobs[i].title,\n                        rating: this.state.jobs[i].rating,\n                        id: this.state.jobs[i]._id,\n                        posting_date: this.state.jobs[i].posting_date\n                    }\n                    return jobDetails\n                }\n            }\n        }\n\n    }\n\n    getStatus(status) {\n\n        if(status == 0)\n            return 'Submitted!';\n        else if(status == 1)\n            return 'Shortlisted!';\n        else if(status == 2)\n            return 'Accepted!';\n        else if(status == 3)\n            return 'Rejected :(';\n    }\n\n    renderJoinDate(d){\n        if(d.accept != 2)\n        {\n            return \"Not Available\";\n        }\n        else{\n            const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n            console.log(this.getJobDetails(d.job).posting_date);\n            return this.getJobDetails(d.job).posting_date.date + \"  \" + monthNames[this.getJobDetails(d.job).posting_date.month] + \", \" + this.getJobDetails(d.job).posting_date.year;\n        }\n    }\n\n    renderUser() { \n        if(this.state.loading)\n        {\n            return(\n                <div>Loading.....</div>\n            )\n        }\n        else\n        {\n            console.log(this.state.applications);\n            const job = this.state.applications.map((d) => \n            <table className=\"table table-bordered\">\n                <tbody>\n                <tr className=\"table-danger\">Phone Number of Recruiter: {this.getJobDetails(d.job).recruiter.phone}</tr>\n                <tr className=\"table-danger\">Recruiter Bio : {this.getJobDetails(d.job).recruiter.bio}</tr>\n                <tr className=\"table-danger\">Title: {this.getJobDetails(d.job).title}</tr>\n                <tr className=\"table-danger\">Your SOP: {d.sop}</tr>\n                <tr className=\"table-danger\">Joining date: {this.renderJoinDate(d)}</tr>\n                <tr className=\"table-danger\">Status: {this.getStatus(d.accept)}</tr>\n                <StarRatings rating={this.getJobDetails(d.job).rating} starRatedColor=\"blue\" changeRating={this.changeRating} numberOfStars={5} name={this.getJobDetails(d.job).id}/>\n                </tbody>\n            </table>\n            );\n            return (\n                <div>\n                    <h1>View Applications</h1>\n                    <Container>{job}</Container>\n                </div>\n            );\n        }\n    }\n\n    render() {\n\n        return(\n        <div>{this.renderUser()}</div>\n        )\n    }\n\n}\nexport default withRouter(viewApplication);"]},"metadata":{},"sourceType":"module"}