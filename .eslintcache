[{"/Users/karthik/Desktop/linkedin-clone/src/index.js":"1","/Users/karthik/Desktop/linkedin-clone/src/App.js":"2","/Users/karthik/Desktop/linkedin-clone/src/reportWebVitals.js":"3","/Users/karthik/Desktop/linkedin-clone/src/components/navbar.component.js":"4","/Users/karthik/Desktop/linkedin-clone/src/components/register.component.js":"5","/Users/karthik/Desktop/linkedin-clone/src/components/intro.component.js":"6","/Users/karthik/Desktop/linkedin-clone/src/components/applicant-registration.component.js":"7","/Users/karthik/Desktop/linkedin-clone/src/components/recruiter-registration.component.js":"8","/Users/karthik/Desktop/linkedin-clone/src/components/login.component.js":"9","/Users/karthik/Desktop/linkedin-clone/src/components/dashboard.component.js":"10","/Users/karthik/Desktop/linkedin-clone/src/components/jobview.component.js":"11","/Users/karthik/Desktop/linkedin-clone/src/components/jobadd.component.js":"12","/Users/karthik/Desktop/linkedin-clone/src/components/apply.component.js":"13"},{"size":683,"mtime":1610476723736,"results":"14","hashOfConfig":"15"},{"size":1097,"mtime":1610632575791,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1610115406180,"results":"17","hashOfConfig":"15"},{"size":1382,"mtime":1610565011707,"results":"18","hashOfConfig":"15"},{"size":1325,"mtime":1610473064139,"results":"19","hashOfConfig":"15"},{"size":534,"mtime":1610496435627,"results":"20","hashOfConfig":"15"},{"size":9379,"mtime":1610615605523,"results":"21","hashOfConfig":"15"},{"size":3625,"mtime":1610565618082,"results":"22","hashOfConfig":"15"},{"size":2459,"mtime":1610512170407,"results":"23","hashOfConfig":"15"},{"size":4946,"mtime":1610615878984,"results":"24","hashOfConfig":"15"},{"size":5929,"mtime":1610632739298,"results":"25","hashOfConfig":"15"},{"size":9428,"mtime":1610566121200,"results":"26","hashOfConfig":"15"},{"size":2703,"mtime":1610634681582,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"1s0exlk",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/karthik/Desktop/linkedin-clone/src/index.js",["61","62"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\n\n// STORE -> GLOBALISED STATE\n\n\n// ACTION -> INCREMENT\nconst increment = () => {\n  return {\n    type: 'INCREMENT'\n  }\n}\n\n// REDUCERS \n\n\n// DISPATCH\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["63","64"],"/Users/karthik/Desktop/linkedin-clone/src/App.js",[],"/Users/karthik/Desktop/linkedin-clone/src/reportWebVitals.js",[],"/Users/karthik/Desktop/linkedin-clone/src/components/navbar.component.js",[],"/Users/karthik/Desktop/linkedin-clone/src/components/register.component.js",["65","66"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nimport ApplicantRegister from \"./applicant-registration.component\";\nimport RecruiterRegister from \"./recruiter-registration.component\";\n\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props);\n        this.onSelect = this.onSelect.bind(this);\n\n        this.state = {\n            option: ''\n        }\n    }\n\n    onSelect(e) {\n        console.log(e);\n        this.setState({\n            option: e\n        });\n    }\n\n\n    render(){\n        return (\n            <div>\n            <DropdownButton alignRight title=\"Register as\" id=\"dropdown-menu-align-right\" value={this.state.option} onSelect={this.onSelect} >\n              <Dropdown.Item eventKey=\"Applicant\">Applicant Registration</Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item eventKey=\"Recruiter\">Recruiter Registration</Dropdown.Item>\n            </DropdownButton>\n\n            {this.state.option === \"\" ? '' : (this.state.option === \"Applicant\" ? <ApplicantRegister/> : <RecruiterRegister/>)}\n            </div>\n        )\n    }\n\n}","/Users/karthik/Desktop/linkedin-clone/src/components/intro.component.js",["67","68","69","70"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\n\nexport default class Intro extends Component {\n    constructor(props) {\n        super(props);\n      }\n      componentDidMount() {\n        localStorage.clear();\n      }\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>You or on introduction</h1>\n                <h4>LinkedIn Clone: DASS Assignment-1</h4>\n            </div>\n        );\n    }\n}","/Users/karthik/Desktop/linkedin-clone/src/components/applicant-registration.component.js",["71","72","73","74","75","76","77","78","79","80","81"],"/Users/karthik/Desktop/linkedin-clone/src/components/recruiter-registration.component.js",["82","83","84","85","86","87"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\n\nclass recruiterRegister extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangeBio = this.onChangeBio.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onChangePhone = this.onChangePhone.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n\n            name: '',\n            email: '',\n            bio: '',\n            phone: '',\n            password: ''\n        }\n    }\n\n    onChangeName(e){\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    onChangeEmail(e){\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e){\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    onChangeBio(e){\n        this.setState({\n            bio: e.target.value\n        });\n    }\n\n    onChangePhone(e){\n        this.setState({\n            phone: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        \n        const recruiter = {\n            type: \"Recruiter\",\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            phone: this.state.phone,\n            bio: this.state.bio\n        }\n        axios.post(\"http://localhost:5000/users/register\", recruiter).then(result => { \n            console.log(result.data); \n            if(result.data ==  1) {alert('Success'); this.props.history.push('/login'); }\n            else alert(result.data == 1);\n        })\n        .catch(error => console.log(error));\n        console.log(recruiter);\n\n    }\n\n    render(){\n        return (\n            <div>\n                <h3> Register Recruiter </h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Name: </label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.onChangeName} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Email: </label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.email} onChange={this.onChangeEmail} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Phone: </label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.phone} onChange={this.onChangePhone} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Password: </label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.password} onChange={this.onChangePassword} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Bio: </label>\n                        <input type=\"textbox\" className=\"form-control\" value={this.state.bio} onChange={this.onChangeBio} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Create Recruiter\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n\n};\n\nexport default withRouter(recruiterRegister);\n\n\n\n","/Users/karthik/Desktop/linkedin-clone/src/components/login.component.js",["88","89","90"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from \"react-router-dom\";\nconst jwt = require('jsonwebtoken');\n\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const loginCred = {\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        axios.post(\"http://localhost:5000/users/login\", loginCred).then(result => { \n            const tokens = {\n                token: result.data.token\n             }; \n             console.log(result.data);\n            if(result.data.token){\n                localStorage.setItem(\"token\" , result.data.token);\n                localStorage.setItem(\"type\" , result.data.user.type);\n                this.props.history.push('/dashboard');\n            }\n            else{\n                alert(\"Wrong Credentials\");\n                this.props.history.push('/');\n            }\n        })\n        .catch(error => console.log(error));\n        console.log(loginCred);\n    }\n\n    render(){\n        return (\n            <div>\n            <form onSubmit={this.onSubmit}>\n\n                <div className=\"form-group\">\n                    <label>Email:</label>\n                    <input type=\"text\" className=\"form-control\" value={this.state.email} onChange={this.onChangeEmail} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password:</label>\n                    <input type=\"text\" className=\"form-control\" value={this.state.password} onChange={this.onChangePassword} />\n                </div>\n                \n                <div className=\"form-group\">\n                    <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\n                </div>\n            </form>\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter(Login);","/Users/karthik/Desktop/linkedin-clone/src/components/dashboard.component.js",["91","92"],"/Users/karthik/Desktop/linkedin-clone/src/components/jobview.component.js",["93","94","95","96","97","98","99"],"/Users/karthik/Desktop/linkedin-clone/src/components/jobadd.component.js",["100","101","102","103","104"],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withRouter } from \"react-router-dom\";\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.componentWillMount = this.componentWillMount.bind(this);\n        this.onChangeDeadline = this.onChangeDeadline.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeType = this.onChangeType.bind(this);\n        this.onChangeDuration = this.onChangeDuration.bind(this);\n        this.onChangePostingDate = this.onChangePostingDate.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeSalary = this.onChangeSalary.bind(this);\n        this.onChangeMaxApplicants = this.onChangeMaxApplicants.bind(this);\n        this.onChangeMaxPositions = this.onChangeMaxPositions.bind(this);\n        this.state = {\n            title: '',\n            max_applicants: '',\n            max_positions: '',\n            recruiter: '',\n            skills: [],\n            type: '',\n            posting_date: '',\n            deadline: '',\n            duration: 0,\n            salary: ''\n        }\n    }\n\n    componentWillMount() {\n\n        const User = {\n            token: localStorage.getItem('token'),\n            type: localStorage.getItem('type')\n        }\n\n        const newToken = {\n            token: localStorage.getItem('token')\n        }\n\n        if(User.type !== 'Recruiter')\n        {\n            alert('Not Recruiter!');\n            this.props.history.push('/');\n        }\n        else {\n            axios.post(\"http://localhost:5000/users/decode\" , newToken)\n            .then(res => {\n                this.setState({recruiter: res.data.id});\n                if(!res.data.id)\n                {\n                    alert(\"Session time out / Not permitted\");\n                    this.props.history.push('/');\n                }\n            })\n        }\n    }\n\n    skilladdClick(){\n        this.setState(prevState => ({ \n            skills: [...prevState.skills, '']\n        }))\n    }\n\n    skillhandleChange(i, e) {\n        const { name , value } = e.target;\n        let skills = [...this.state.skills];\n        skills[i] = {...skills[i],  [name]: value}; \n        console.log(skills);\n        this.setState({ skills });\n    }\n\n    skillremoveClick(i){\n        let skills = [...this.state.skills];\n        skills.splice(i, 1);\n        this.setState({ skills });\n    }\n\n    skillcreateUI(){\n        return this.state.skills.map((el, i) => (\n          <div key={i} className=\"d-flex\">\n             <input placeholder=\"Skill\" name=\"skill\" className=\"form-control\" value={el.skill ||''} onChange={this.skillhandleChange.bind(this, i)} />\n             <input type='button' className=\"btn btn-secondary\" value='remove' onClick={this.skillremoveClick.bind(this, i)}/>\n          </div>          \n        ))\n    }\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        })\n    }\n\n    onChangeMaxApplicants(e) {\n        this.setState({\n            max_applicants: e.target.value\n        })\n    }\n\n    onChangeMaxPositions(e) {\n        this.setState({\n            max_positions: e.target.value\n        })\n    }\n\n    onChangeType(e) {\n        this.setState({\n            type: e\n        })\n    }\n\n    onChangeDeadline(e) {\n        this.setState({\n            deadline: e.target.value\n        })\n    }\n\n    \n    onChangeSalary(e) {\n        this.setState({\n            salary: e.target.value\n        })\n    }\n\n    onChangeDuration(e) {\n        this.setState({\n            duration: e\n        });\n    }\n\n    onChangePostingDate(e) {\n        this.setState({\n            posting_date: e.target.value\n        })\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        console.log(this.state);\n        const deadlineDate = new Date(this.state.deadline);\n        const postingDate = new Date(this.state.posting_date);\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        const skill_len = this.state.skills.length;\n        var skill = [];\n        if(skill_len != 0)\n        {\n            for(var i = 0 ; i < skill_len ; i++)\n            {\n                skill.push(this.state.skills[i].skill);\n            }\n        }\n        const newJob = {\n            token: localStorage.getItem('token'),\n            deadline: deadlineDate,\n            posting_date: {date: postingDate.getDate() , month: postingDate.getMonth() , year: postingDate.getFullYear()},\n            salary: this.state.salary,\n            recruiter: this.state.recruiter,\n            title: this.state.title,\n            skills: skill,\n            duration: this.state.duration,\n            max_applicants: this.state.max_applicants,\n            max_positions: this.state.max_positions,\n            type: this.state.type\n        }\n        \n        axios.post(\"http://localhost:5000/jobs/add\" , newJob) \n        .then(result => {\n            if(result.data == 1) { alert('Successful'); this.props.history.push('/dashboard'); }\n            else {alert(result.data);}\n        })\n    }\n\n\n    render(){\n        return (\n            <form onSubmit={this.onSubmit}>\n                <h2> Add Job: </h2>\n                <div className=\"form-group\">\n                    <label>Enter the title for the job: </label>\n                    <input type=\"text\" value={this.state.title} onChange={this.onChangeTitle} className='form-control' placeholder=\"Title\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter the Deadline for application</label>\n                    <input type=\"datetime-local\" className='form-control' value={this.state.deadline} onChange={this.onChangeDeadline} timeFormat={true} inputProps={{ placeholder: \"Deadline\" }}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter the Maximum Number of Applicants</label>\n                    <input type=\"text\" value={this.state.max_applicants} onChange={this.onChangeMaxApplicants} className='form-control' placeholder=\"Max Applicants\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter the Maximum Number of Positions</label>\n                    <input type=\"text\" value={this.state.max_positions} onChange={this.onChangeMaxPositions} className='form-control' placeholder=\"Max Positions\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter the Salary per month</label>\n                    <input type=\"text\" value={this.state.salary} onChange={this.onChangeSalary} className='form-control' placeholder=\"Salary\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter they type of the job: {this.state.type}</label>\n                    <DropdownButton alignRight title=\"Type\" id=\"dropdown\" value={this.state.type} onSelect={this.onChangeType} >\n                        <Dropdown.Item eventKey=\"Intern\">Intern</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"Contract\">Contract</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"Full-time\">Full-time</Dropdown.Item>\n                    </DropdownButton>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter the duration for the job; if its full time or contract, enter 0: {this.state.duration}</label>\n                    <DropdownButton alignRight title=\"Type\" id=\"dropdown\" value={this.state.duration} onSelect={this.onChangeDuration} >\n                        <Dropdown.Item eventKey=\"0\">0</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"1\">1</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"2\">2</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"3\">3</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"4\">4</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"5\">5</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"6\">6</Dropdown.Item>\n                    </DropdownButton>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter Skills: </label>\n                    {this.skillcreateUI()}\n                    <input type='button' value='add' className=\"btn btn-secondary pull-right\" onClick={this.skilladdClick.bind(this)}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Enter Posting Date</label>\n                    <input type=\"date\" id=\"start\" name=\"trip-start\" value=\"2021-07-22\" min=\"2020-01-01\" max=\"2021-12-31\" className=\"form-control\" value={this.state.posting_date} onChange={this.onChangePostingDate} />\n                </div>\n\n                <div className=\"form-group\">\n                     <input type=\"submit\" value=\"Add Job\" className=\"btn btn-primary\" />\n                </div>\n            </form>\n        )\n    }\n\n}\n\nexport default withRouter(Login);","/Users/karthik/Desktop/linkedin-clone/src/components/apply.component.js",["105","106"],{"ruleId":"107","severity":1,"message":"108","line":6,"column":9,"nodeType":"109","messageId":"110","endLine":6,"endColumn":20},{"ruleId":"107","severity":1,"message":"111","line":12,"column":7,"nodeType":"109","messageId":"110","endLine":12,"endColumn":16},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"107","severity":1,"message":"116","line":1,"column":8,"nodeType":"109","messageId":"110","endLine":1,"endColumn":13},{"ruleId":"107","severity":1,"message":"117","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"107","severity":1,"message":"118","line":2,"column":27,"nodeType":"109","messageId":"110","endLine":2,"endColumn":33},{"ruleId":"107","severity":1,"message":"119","line":2,"column":35,"nodeType":"109","messageId":"110","endLine":2,"endColumn":40},{"ruleId":"107","severity":1,"message":"117","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":6,"column":5,"nodeType":"122","messageId":"123","endLine":8,"endColumn":8},{"ruleId":"107","severity":1,"message":"117","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":165,"column":16,"nodeType":"126","messageId":"127","endLine":165,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":169,"column":17,"nodeType":"130","endLine":169,"endColumn":40},{"ruleId":"131","severity":1,"message":"132","line":169,"column":54,"nodeType":"130","messageId":"133","endLine":169,"endColumn":88},{"ruleId":"128","severity":1,"message":"129","line":170,"column":17,"nodeType":"130","endLine":170,"endColumn":40},{"ruleId":"131","severity":1,"message":"134","line":170,"column":53,"nodeType":"130","messageId":"133","endLine":170,"endColumn":85},{"ruleId":"124","severity":1,"message":"125","line":176,"column":22,"nodeType":"126","messageId":"127","endLine":176,"endColumn":24},{"ruleId":"135","severity":1,"message":"136","line":178,"column":21,"nodeType":"109","messageId":"137","endLine":178,"endColumn":22},{"ruleId":"124","severity":1,"message":"125","line":185,"column":21,"nodeType":"126","messageId":"127","endLine":185,"endColumn":23},{"ruleId":"135","severity":1,"message":"136","line":187,"column":21,"nodeType":"109","messageId":"137","endLine":187,"endColumn":22},{"ruleId":"124","severity":1,"message":"138","line":206,"column":28,"nodeType":"126","messageId":"127","endLine":206,"endColumn":30},{"ruleId":"107","severity":1,"message":"118","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":16},{"ruleId":"107","severity":1,"message":"119","line":3,"column":18,"nodeType":"109","messageId":"110","endLine":3,"endColumn":23},{"ruleId":"107","severity":1,"message":"117","line":3,"column":25,"nodeType":"109","messageId":"110","endLine":3,"endColumn":29},{"ruleId":"107","severity":1,"message":"139","line":3,"column":31,"nodeType":"109","messageId":"110","endLine":3,"endColumn":39},{"ruleId":"124","severity":1,"message":"138","line":70,"column":28,"nodeType":"126","messageId":"127","endLine":70,"endColumn":30},{"ruleId":"124","severity":1,"message":"138","line":71,"column":36,"nodeType":"126","messageId":"127","endLine":71,"endColumn":38},{"ruleId":"107","severity":1,"message":"117","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"107","severity":1,"message":"140","line":6,"column":7,"nodeType":"109","messageId":"110","endLine":6,"endColumn":10},{"ruleId":"107","severity":1,"message":"141","line":44,"column":19,"nodeType":"109","messageId":"110","endLine":44,"endColumn":25},{"ruleId":"107","severity":1,"message":"117","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"107","severity":1,"message":"140","line":6,"column":7,"nodeType":"109","messageId":"110","endLine":6,"endColumn":10},{"ruleId":"107","severity":1,"message":"117","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"107","severity":1,"message":"140","line":7,"column":7,"nodeType":"109","messageId":"110","endLine":7,"endColumn":10},{"ruleId":"124","severity":1,"message":"125","line":89,"column":16,"nodeType":"126","messageId":"127","endLine":89,"endColumn":18},{"ruleId":"142","severity":1,"message":"143","line":123,"column":21,"nodeType":"144","endLine":123,"endColumn":33},{"ruleId":"142","severity":1,"message":"143","line":142,"column":25,"nodeType":"144","endLine":142,"endColumn":37},{"ruleId":"124","severity":1,"message":"138","line":163,"column":28,"nodeType":"126","messageId":"127","endLine":163,"endColumn":30},{"ruleId":"124","severity":1,"message":"138","line":174,"column":28,"nodeType":"126","messageId":"127","endLine":174,"endColumn":30},{"ruleId":"107","severity":1,"message":"117","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"107","severity":1,"message":"145","line":149,"column":15,"nodeType":"109","messageId":"110","endLine":149,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":152,"column":22,"nodeType":"126","messageId":"127","endLine":152,"endColumn":24},{"ruleId":"124","severity":1,"message":"138","line":175,"column":28,"nodeType":"126","messageId":"127","endLine":175,"endColumn":30},{"ruleId":"146","severity":1,"message":"147","line":243,"column":147,"nodeType":"148","endLine":243,"endColumn":178},{"ruleId":"107","severity":1,"message":"117","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"107","severity":1,"message":"149","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":17},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","'increment' is assigned a value but never used.","no-native-reassign",["150"],"no-negated-in-lhs",["151"],"'axios' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-self-assign","'this.state.education[i].start_year' is assigned to itself.","selfAssignment","'this.state.education[i].end_year' is assigned to itself.","no-redeclare","'i' is already defined.","redeclared","Expected '===' and instead saw '=='.","'Redirect' is defined but never used.","'jwt' is assigned a value but never used.","'tokens' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'monthNames' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]